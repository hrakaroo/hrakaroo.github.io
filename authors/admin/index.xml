<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hrakaroo</title>
    <link>/authors/admin/</link>
      <atom:link href="/authors/admin/index.xml" rel="self" type="application/rss+xml" />
    <description>Hrakaroo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 08 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu82bb96251336236c27845c6dd2b93c07_14416_512x512_fill_lanczos_center_3.png</url>
      <title>Hrakaroo</title>
      <link>/authors/admin/</link>
    </image>
    
    <item>
      <title>Summiting Mt. Hood 2022</title>
      <link>/post/summiting-hood-2022/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>/post/summiting-hood-2022/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;./Hood.jpg&#34; alt=&#34;Mt. Hood&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;In March 2022 I was accepted into the &lt;a href=&#34;https://mazamas.org/BCEP/&#34;&gt;Mazamas
BCEP&lt;/a&gt; program where I learned basic rock
and snow climbing skills. This was a fantastic experience and I highly
recommend the program if you are in the Northwest and are at all
interested in hiking and climbing. Once the program completed I signed
up to join the Mt. Hood Climb scheduled for May 8, 2022 (mothers day),
which was eventually pushed back to the following Wednesday (May 11th)
due to weather conditions. There were a total of nine people
(including the climb leaders) in the climbing group.&lt;/p&gt;
&lt;h2 id=&#34;the-day-before&#34;&gt;The day before&lt;/h2&gt;
&lt;p&gt;The day before the climb I drove up to Timberline Lodge and parked in
the lower parking lot that allows climbers to camp/park overnight. In
the weeks before the climb I had built a flat &amp;ldquo;bed&amp;rdquo; in the back of my
Honda Pilot so I could put a sleeping pad down and stretch out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./HondaPilot.jpg&#34; alt=&#34;honda pilot&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a &lt;em&gt;really&lt;/em&gt; good idea to get to the parking lot the night before
and start to acclimate to the altitude. Timberline lodge is at around
6,000 ft of elevation and the top of Mt. Hood is 11,249 so the more
time you have to acclimate the better.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Six of the nine people from our group opted to show up the night
before with three people driving up the morning of the climb.
Initially we were planning to start our climb at 1am the next morning,
but due to temperatures being lower than expected we were able to push
our start time back to 2pm.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As the temperature heats up it can cause the ice and snow to soften
creating dangerous climbing conditions as rocks and ice are more
likely to break away and fall on you.  Additionally, warmer
temperatures weaken the structure of snow bridges over crevasses which
increases risk.  Ideally you want to climb when everything is frozen
solid and stable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So fter rechecking my pack several times I finally went to sleep
around 8pm.&lt;/p&gt;
&lt;h2 id=&#34;the-day-of&#34;&gt;The day of&lt;/h2&gt;
&lt;h3 id=&#34;getting-ready&#34;&gt;Getting Ready&lt;/h3&gt;
&lt;p&gt;For a start time of 2am I should ideally wake up at 1am to begin
getting ready but due to nerves I woke up closer to 12am and was
unable to fall back asleep.  So at 12:30am I gave up trying and
started getting ready for the climb. The day before I had prepared
oatmeal in a thermos with hot water which I had for breakfast and then
started to get my gear on.&lt;/p&gt;
&lt;p&gt;In addition to everything in my pack, I was also carrying one of the
climbing ropes we were bringing in case we needed it going over the
bergschrund, which added around 15 lbs to my pack. (I was also carring
the fule for the stove we were required to bring but it only added a
nominal amount of weight.)&lt;/p&gt;
&lt;h3 id=&#34;starting-the-climb&#34;&gt;Starting the climb&lt;/h3&gt;
&lt;p&gt;Just before 2am we started off. The night was amazingly clear but
&lt;em&gt;exceedingly cold&lt;/em&gt;. As we were hiking up we could see the headlights
from other climbers further up the mountain who had left earlier.&lt;/p&gt;
&lt;p&gt;The first part of the climb takes you to the top of the Palmer Lift
and the route you take is along the &amp;ldquo;road&amp;rdquo; the snowcats create when
coming back after grooming the ski slope. So the snow is pretty
compacted and you can climb it easily in just your mountaineering
boots and without crampons. (Crampons are great, but they are heavy,
increase the likelihood of tripping, and generally slow you down.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./HoodNight.jpg&#34; alt=&#34;hood1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;silcox-hut&#34;&gt;Silcox Hut&lt;/h3&gt;
&lt;p&gt;At approximately 3am we reached Silcox Hut and two things had already
happened.  First, two people decided to drop out of the climb as they
were not feeling up to it.  (It should be noted that both of these
people were from the group that decided to drive up the morning of the
climb so they did not have the extra six plus hours to acclimate to
the altitude.)&lt;/p&gt;
&lt;p&gt;Secondly, my water was starting to freeze. I had made the mistake of
using a bladder for my water with an attached hose for drinking. This
was the same setup I had used on multiple hikes and ski trips so I
thought that as long as, after taking a drink, I blew air into my hose
I could keep it mostly thawed. The problem was that the nozzle had
collected water and was mostly frozen solid. After a lot of work I
managed to get it somewhat unclogged and had, what would turn out to
be, my last sip of water until after I was off the summit. In
retrospect this was a &lt;em&gt;huge&lt;/em&gt; and possibly dangerous mistake on my part
and I should have carried backup water in my pack.&lt;/p&gt;
&lt;p&gt;Somewhere between Silcox Hut and the top of the Palmer lift we started
to get whiffs of the fumaroles on Mt. Hood which smells strong of
sulfur.&lt;/p&gt;
&lt;h3 id=&#34;top-of-palmer&#34;&gt;Top of Palmer&lt;/h3&gt;
&lt;p&gt;At 4:40am we reached the top of the Palmer lift. The sun was starting
to come up a bit but it was still &lt;em&gt;really&lt;/em&gt; cold.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Palmer1.jpg&#34; alt=&#34;Palmer 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;For the climb up to the Hogsback (and summit beyond) we would be in
deep snow and no longer on a groomed trail so we needed our crampons,
helmets and ice axes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Palmer2.jpg&#34; alt=&#34;Palmer 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;I was also able to switch off carrying the climbing rope to another
climber so for the rest of the time my pack was 15 lbs lighter which
made a considerable difference.&lt;/p&gt;
&lt;p&gt;We had brought snowshoes for the climb, but after looking at the steps
already dug for us by the previous climbers, we decided to stash our
snowshoes near Palmer and go on without them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./AbovePalmer1.jpg&#34; alt=&#34;Above Palmer 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./AbovePalmer2.jpg&#34; alt=&#34;Above Palmer 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can see the shadow of the mountain on the landscape below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./AbovePalmer3.jpg&#34; alt=&#34;Above Palmer 3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Hogsback1.jpg&#34; alt=&#34;Climb to Hogsback1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Hogsback2.jpg&#34; alt=&#34;Climb to Hogsback2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Hogsback3.jpg&#34; alt=&#34;Hogsback1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hogsback&#34;&gt;Hogsback&lt;/h3&gt;
&lt;p&gt;Once we reached the Hogsback we were able to see the different routes
to the summit.  The Pearly Gates looked safe enough and the
bergschrund was sufficiently covered that we felt comfortable climbing
to the summit without ropes. This allowed us to stash our ropes and
harnesses which removed a considerable amount of weight from our
packs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Pearly1.jpg&#34; alt=&#34;Path to Pearly Gates1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;fumaroles&#34;&gt;Fumaroles&lt;/h3&gt;
&lt;p&gt;At the Hogsback you can also see the fumaroles to either side of the
path to the Pearly Gates. It&amp;rsquo;s important to watch your step near them
because while they are warm, it&amp;rsquo;s really the lack of oxygen that will
kill you before the heat will. That said, they are rather stunning in
the snow.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Fumaroles1.jpg&#34; alt=&#34;Fumaroles 1&#34;&gt;
&lt;img src=&#34;./Fumaroles2.jpg&#34; alt=&#34;Fumaroles 2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;pearly-gates&#34;&gt;Pearly Gates&lt;/h3&gt;
&lt;p&gt;We were forced to wait a bit at Hogsback as there were a lot of people
trying to get through the Pearly Gates and the section right before
the Gates themselves is the bergschrund, which you want to pass over
as quickly as possible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Pearly2.jpg&#34; alt=&#34;Path to Pearly Gates1&#34;&gt;
&lt;img src=&#34;./Pearly3.jpg&#34; alt=&#34;Path to Pearly Gates1&#34;&gt;&lt;/p&gt;
&lt;p&gt;Going through the Pearly Gates was one of the more surreal experiences
of the entire climb. First, the angle is rather steep so a lot of the
climb is on your hands and feet. The climbers before us had already
cut steps into the snow so it isn&amp;rsquo;t particularly hard, but it is slow
going and some areas are only wide enough for two people (one going up
and one going down) so you are forced to go as slow as the person
ahead of you is going. Secondly, the natural ice sculptures that have
been created from the snow and wind are stunningly beautiful.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Pearly4.jpg&#34; alt=&#34;Path to Pearly Gates1&#34;&gt;
&lt;img src=&#34;./Pearly5.jpg&#34; alt=&#34;Path to Pearly Gates1&#34;&gt;&lt;/p&gt;
&lt;p&gt;Of course, the entire time I was climbing up through the Pearly Gates
I had it in the back of my mind that I would shortly be having to
climb down this as well.&lt;/p&gt;
&lt;h3 id=&#34;the-summit&#34;&gt;The Summit&lt;/h3&gt;
&lt;p&gt;Once you pass through the Pearly Gates the top of the mountain
actually levels off a bit and the summit is mostly flat with only
about a 10-15% incline.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Summit1.jpg&#34; alt=&#34;Summit 1&#34;&gt;
&lt;img src=&#34;./Summit2.jpg&#34; alt=&#34;Summit 2&#34;&gt;
&lt;img src=&#34;./Summit3.jpg&#34; alt=&#34;Summit 3&#34;&gt;
&lt;img src=&#34;./Summit4.jpg&#34; alt=&#34;Summit 4&#34;&gt;&lt;/p&gt;
&lt;p&gt;The view from the top is nothing short of breathtaking.  The sun was
out and we could see for miles.  It was, however, very cold and we
still had to down climb through the Pearly Gates.&lt;/p&gt;
&lt;h3 id=&#34;the-climb-down&#34;&gt;The climb down&lt;/h3&gt;
&lt;p&gt;While climbing up through the Pearly Gates you can plan out where you
are going to step, but the way back down requires a lot more trust.
This is where having spikes on the front of your crampons and
mountaineering boots really pays off. For most steps I would kick my
foot into the snow a couple of times until I had created a slight
indentation and then use the spikes to hold the majority of my weight.
My mountaineering boots had a full shank so as long as my toes were
secure I could stand up securely with the majority of my foot
suspended by just my toes.&lt;/p&gt;
&lt;p&gt;Initially this was hard for me to relax into, but after a while I
really started to trust my equipment and the climb down became a lot
easier.&lt;/p&gt;
&lt;h3 id=&#34;plunge-stepping-down-to-palmer&#34;&gt;Plunge stepping down to Palmer&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;./Down.jpg&#34; alt=&#34;Down&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once we were back at the Hogsback my water tube finally thawed
enough that I was able to get a drink. After that we collected the
ropes and harnesses we had stashed and headed down to Palmer.&lt;/p&gt;
&lt;p&gt;We started out on the trail we had taken getting to the Hogsback, but
quickly drifted off and were mostly plunge stepping down to Palmer.
Some of the folks in our group tried glissading down, but the snow was
pretty deep which made for slow going.&lt;/p&gt;
&lt;h3 id=&#34;glissading&#34;&gt;Glissading&lt;/h3&gt;
&lt;p&gt;At Palmer we collected the snow shoes we had stashed and got back onto
the groomed snowcat trail. We also quickly discovered that while
glissading in the deep snow was difficult, glissading on the groomed
snowcat trail was really easy. I had brought with me some medium gauge
plastic that worked okay as a sled as I was able to glissade for
probably 75% of the way from Palmer back to Timberline.&lt;/p&gt;
&lt;h3 id=&#34;back-at-the-car&#34;&gt;Back at the car&lt;/h3&gt;
&lt;p&gt;Finally back at the car we packed up our gear and drove into Welches to
have lunch.  After lunch I went into the parking lot, got into my sleeping
bag and took a four hour nap before finally driving home.&lt;/p&gt;
&lt;h2 id=&#34;closing-thoughts&#34;&gt;Closing thoughts&lt;/h2&gt;
&lt;h3 id=&#34;1010-would-do-it-again&#34;&gt;10/10 would do it again&lt;/h3&gt;
&lt;p&gt;I had a fantastic time overall, the weather was near perfect and the
climbing was excellent. The ice sculptures near the summit are
unworldly and something that you really need to see in person to
believe.  It was also amazing standing at the highest point in all of
Oregon and being able to see for miles around you.&lt;/p&gt;
&lt;h3 id=&#34;the-cold-was-no-joke&#34;&gt;The cold was no joke&lt;/h3&gt;
&lt;p&gt;I think overall I underestimated how cold it was going to get. In
addition to my water tube freezing and leaving me without water for
the majority of the climb, my fingers and toes also suffered.  I
suspect that I have Raynaud&amp;rsquo;s disease which causes my body to abandon
my fingers and toes pretty quickly when I get cold.  Although I was
wearing gloves and glove liners, my fingers still became very cold and
numb.  Plus, putting on my crampons, opening my backpack and even just
getting my snack bag opened required me to take off at least my outer
glove layer which didn&amp;rsquo;t help. I also started to lose feeling in my
toes around Palmer and continued to lose more feeling in my feet for
the rest of the climb.&lt;/p&gt;
&lt;p&gt;Normally once I warm up the feeling comes back into my fingers and
toes pretty quickly, but not this time. For at least the first week
after the climb (and some of the next) I still had loss of feeling in
my toes, thumbs and forefingers.  This was unnerving and at the time I
wasn&amp;rsquo;t quite sure if I would ever regain feeling.  Eventually, slowly,
the feeling did come back and now I&amp;rsquo;m back to normal, but it&amp;rsquo;s not
something I really want to repeat.&lt;/p&gt;
&lt;p&gt;For next time I have purchased some battery powered socks and mittens
that I&amp;rsquo;m hoping will keep me warmer.  Plus, I&amp;rsquo;m going to be taking some
of those chemical hand warmers with me as well.&lt;/p&gt;
&lt;h3 id=&#34;gear&#34;&gt;Gear&lt;/h3&gt;
&lt;p&gt;With the exception of my water bladder/tube the rest of my gear for the
trip worked out really well and I wouldn&amp;rsquo;t change anything. A second
ice axe would probably have been useful but I didn&amp;rsquo;t feel unsafe without
one.  The only real modification that I will be making for next time
is creating a glissading sled with thicker plastic so it holds up better
for the ride down.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Ice.jpg&#34; alt=&#34;Ice&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In defense of obscure names</title>
      <link>/post/obscure-names/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/post/obscure-names/</guid>
      <description>&lt;h4 id=&#34;in-defense-of-obscure-names&#34;&gt;In defense of obscure names&lt;/h4&gt;
&lt;h2 id=&#34;naming-things-is-hard&#34;&gt;Naming things is hard&lt;/h2&gt;
&lt;p&gt;As the joke goes&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are only two hard things in Computer Science: cache
invalidation and naming things.  &amp;ndash; Phil Karlton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and while this is funny (perhaps only to those in Computer Science)
underlying the quote is a real issue, naming things is really hard.&lt;/p&gt;
&lt;p&gt;The challenge is not just in giving something an appropriate name for
right now, but trying to predict how they may evolve and be used in
the future.&lt;/p&gt;
&lt;p&gt;Maybe you start with a database of bicycles, but as powered bicycles
are introduced you start adding those but then it&amp;rsquo;s a slippery slope
to electric motorcycles and then gas powered motorcycles. Pretty soon
your database of bicycles includes all motorcycles and perhaps those
three wheeled things I&amp;rsquo;ve seen driving on the freeway. Unless you had
amazing forethought and were able to predict exactly how the
industry was going to evolve chances are whatever name you select is
going to be incorrect at some point in the future.&lt;/p&gt;
&lt;h2 id=&#34;renaming-isnt-always-easy&#34;&gt;Renaming isn&amp;rsquo;t always easy&lt;/h2&gt;
&lt;p&gt;So, if the scope does evolve and the original name is no longer
correct we should just rename it, right? Sometimes this is
the answer. Tools for Computer Science have come a long way
and doing a code refactoring is&amp;rsquo;t as hard as it once was. So if we
have a variable name, function name, or even a class/object name that
is no longer accurate we usually have the ability to safely rename it
across all dependencies to a new and more appropriate name.&lt;/p&gt;
&lt;p&gt;But the coding level is often where this capability ends. The industry
has not yet developed the capability to reliability refactor service
names across a distributed system and trying to do it manually is
often fraught with errors that can greatly impact uptime.&lt;/p&gt;
&lt;h2 id=&#34;in-defense-of-the-obscure&#34;&gt;In defense of the obscure&lt;/h2&gt;
&lt;p&gt;So if changing the name of something is difficult and if naming things
correctly &lt;em&gt;now&lt;/em&gt; is hard, (and predicting how they may evolve is nearly
impossible,) then maybe the best thing to do is to purposely give
them obscure names.&lt;/p&gt;
&lt;p&gt;When I was in college we were able to select our own email
addresses. Like most people knew I opted for the straightforward and
used my last name for my address: &lt;code&gt;gerth@lclark.edu&lt;/code&gt;. However, one of
my classmates opted for something entirely different, she selected the
email address of &lt;code&gt;squidlips@lclark.edu&lt;/code&gt;. At first I thought she was
just trying to rebel, but her reasoning was actually pretty
interesting. Her name was something rather basic, (think Jane Doe) and
her argument was that while &lt;code&gt;doe@lclark.edu&lt;/code&gt; runs the risk of being
mistaken for someone else, &lt;code&gt;squidlips@lclark.edu&lt;/code&gt; is almost guaranteed
not to.&lt;/p&gt;
&lt;p&gt;This proved to be more than just an academic observation as it
happened that I was not the only Gerth at Lewis &amp;amp; Clark College. There
was one other one, my father, who was a tenured professor and I
started to receive the occasional email intended for him. People had
seen &lt;code&gt;gerth@lclark.edu&lt;/code&gt; and had incorrectly assumed I was my father
and were sending me information clearly not intended for the
students. (Nothing salacious I&amp;rsquo;m sad to say).&lt;/p&gt;
&lt;p&gt;In this case the name (my email address) was even 100% correct and it
was still getting used incorrectly.  And while while no one may have
known who Squid Lips was, she never got any email not intended for
her.&lt;/p&gt;
&lt;h2 id=&#34;obscure-is-better-than-wrong&#34;&gt;Obscure is better than wrong&lt;/h2&gt;
&lt;p&gt;We make snap decisions all the time and if I was looking to get a list
of vehicles for an endpoint and came across a service named &lt;code&gt;bicycles&lt;/code&gt;
I would immediately cross it off my list. But, if instead the service
was named &lt;code&gt;x34a5a&lt;/code&gt; or even &lt;code&gt;horsetail&lt;/code&gt; I would at least have to
consider it. I may first go looking for something more accurate, but
at least I wouldn&amp;rsquo;t cross it off my list.&lt;/p&gt;
&lt;p&gt;I also prefer calling something &lt;code&gt;horsetail&lt;/code&gt; rather than some obscure
id designation as it&amp;rsquo;s much easier to remember &lt;code&gt;horsetail&lt;/code&gt; and
distinguish it from &lt;code&gt;pigfoot&lt;/code&gt; than trying to remember &lt;code&gt;a20b23&lt;/code&gt; and
distinguish it from &lt;code&gt;c23s40&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So if a thing is going to exist for a while, likely evolve in scope,
and changing it&amp;rsquo;s name is non trivial, then maybe giving it an obscure
name may actually be better and ultimately easier than trying to come
up with the perfect name. In some cases, naming things may not be
all that hard after all.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Avoiding Read/Write Locks</title>
      <link>/post/rw-locks/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/post/rw-locks/</guid>
      <description>&lt;p&gt;Intuitively, read/write locks seem to be a perfect solution. They
allow you to coordinate access to a resource and as long as the write
operations are fast enough the read/write locks are basically free (or
at least only as &amp;ldquo;expensive&amp;rdquo; as the time it takes to execute the write
action.) The idea being that if multiple read routines use a read/write
lock the only time they are blocked from execution is while the write
routine holds the lock, but are otherwise totally unblocked.&lt;/p&gt;
&lt;p&gt;As it turns out this is not necessarily true and read/write locks can
end up being a lot more expensive than they initially appear.&lt;/p&gt;
&lt;p&gt;Consider the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread 1 requests read access to a shared read/write lock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At this point in time no one else has requested the lock for either
read or write access so a read lock is granted to Thread 1.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread 2 requests read access to the same read/write lock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since the lock is currently only read locked by Thread 1, Thread 2
is also given read access.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread 3 requests write access to the same read/write lock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since the lock has been locked for read access by both Thread 1 and
Thread 2, Thread 3 is put on a wait list for write access until
Thread 1 and Thread 2 release their read locks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread 4 requests read access to the same read/write lock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What happens here?&lt;/p&gt;
&lt;p&gt;A first guess might be to give Thread 4 the read lock, along with
Threads 1 and 2, since Thread 3 has not yet obtained the write lock,
but lets consider the fall out if we let this happen. Imagine a system
where every read operation took a minute to execute and requests are
comming in every 30 seconds. If every read request is granted a read
lock so long as no write thread had been given a write lock, new read
requests would always come in before previous ones finished ensuring
that the lock was never free (ie not read locked.) In this situation
the write operation would be blocked from every achieving write
access. aka, lock starvation.&lt;/p&gt;
&lt;p&gt;In order to prevent lock starvation it is necessary that as soon as a
write lock is requested every subsequent read lock request is blocked
from obtaining their lock until the thread requesting the write lock
has been given the write lock, executes, and then releases their lock.&lt;/p&gt;
&lt;p&gt;This means that as soon as a write lock is requested any read threads
currently running will block all new read requests. So a
read/write lock is, worse case, as &amp;ldquo;expensive&amp;rdquo; as the time it takes to
execute the write operation plus the worse case time it takes to
execute a read operation.&lt;/p&gt;
&lt;p&gt;Therefore, even if you optimize your system so the write operations
are as fast as possible, your overall throughput may still be
dependent on your slowest running read operation.&lt;/p&gt;
&lt;h2 id=&#34;what-readwrite-locks-are-good-for&#34;&gt;What read/write locks are good for.&lt;/h2&gt;
&lt;p&gt;Read/Write are useful when you need a memory barrier and &lt;em&gt;every&lt;/em&gt;
thread on your service should only see the state of some memory either
before or after a write operation but never but never both. Meaning
that it is not allowable for some threads to see the value of the
memory before the write operations and other threads running at the
same time to see the memory value after the write operation.&lt;/p&gt;
&lt;p&gt;But, as we saw above, this comes at a cost and in &lt;em&gt;many&lt;/em&gt; cases it&amp;rsquo;s
not really needed.&lt;/p&gt;
&lt;p&gt;For example, suppose we have a data structure that holds the account
balance for an individual. Suppose also that this account receives a
constant stream of read requests that, for what ever reason, take
several minutes to calculate. If we were to use a traditional
read/write lock here then every time there is a deposit or withdrawal
(a write operation) all read operations will be blocked until all
running read operations finish and the write executes.&lt;/p&gt;
&lt;p&gt;Although the write operation may be quick, the long execution time on
the read operation is going to cause the system to appear blocked
while it waits for the write lock. But if we can tolerate concurrent
threads seeing two different values then we can remove the block all
together and achieve higher overall throughput.&lt;/p&gt;
&lt;p&gt;To achieve this we first need to make the data structure immutable.
Updates would instead be handled by the write thread copying the
immutable data structure locally, modifying it (or modify on copy) and
then using an atomic operation to swap in the new data structure.&lt;/p&gt;
&lt;p&gt;Read operations running against the old data structure would continue
to run and would report the old value, while any new read operation
would run over the new data structure and report the new value.
Eventually all old read operations would finish and the only view
would be of the new data structure, but for a time it would be
possible for different threads to report different values.&lt;/p&gt;
&lt;p&gt;Destroying the old data structure can be handled either automatically by
letting the garbage collector pick it up, or we can add read counters to
objects which can tell us when an object is no longer being accessed and
we can delete it manually.&lt;/p&gt;
&lt;p&gt;We could also re-introduce a simple lock for just the writer
operations to ensure that multiple write operations always happen in
sequence so they can never overlap and they would never cause
inconsistent results.&lt;/p&gt;
&lt;p&gt;So while read/write locks often appear, at first blush, like a
panacea, they can actually carry a substantial hidden cost.  And in
some cases the functionality provided by a read/write lock may not
even be what you really need.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summiting Mount St. Helens in 3&#43;1 Days</title>
      <link>/post/summiting-st-helens-2019/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/summiting-st-helens-2019/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;In July 2019 my friend Tobin and I decided to hike the full Loowit
loop trail around Mount St. Helens. Both of us are experienced hikers
and in reasonable shape and figured we could probably complete about
10-14 miles a day. The total distance around the mountain is about
35 miles, so we figured it should take us approximately 3 days to
hike. We also managed to secure two passes to climb to the top of
St. Helens for Aug 2nd which extended our trip by one day.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to climb to the top of Mount St. Helens you need a permit,
which can be difficult to obtain depending on when you want to climb.
The summer permits often sell out very quickly so initially we assumed
we would not be able to climb to the top. Even so, we signed up on a
reseller web site and about a week before we were set to climb we were
contacted by someone who had two extra passes as some people in their
party backed out at the last moment. Further, the person lived in
Seattle and was only a short distance from Tobin, so two days before
we were set to leave Tobin drove to their house and bought the two
passes from the seller. The guy was really nice and didn&amp;rsquo;t mark up
the cost and just charged us the $20 or so per pass that he had paid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;the-trip&#34;&gt;The trip&lt;/h2&gt;
&lt;h3 id=&#34;where-to-start&#34;&gt;Where to start&lt;/h3&gt;
&lt;p&gt;The first challenge was figuring out where to enter the Loowit trail
and which direction to hike (clockwise or counter clockwise).  Since
there is only one trail up to the summit and our passes were for Aug
2nd we had a hard requirement of being near Monitor Ridge on the night
of Aug 1st. Initially we thought we would enter at Sheep Canyon
trailhead and hike clockwise on the trail.  This would put us around
Windy Pass on the first night and close to June Lake on the second
night.  (In retrospect this was probably not a great plan as Windy
Pass isn&amp;rsquo;t named ironically.  It is windy as hell and camping there
would have been a trick.)  However, the &lt;em&gt;night before&lt;/em&gt; we were
planning on leaving we realized the trailhead we were going to use had
been washed out and we had to scramble to come up with a new plan.&lt;/p&gt;
&lt;p&gt;The new plan was to park at the Windy Ridge trailhead and hike counter
clockwise around the mountain.  Tobin is from Seattle and I&amp;rsquo;m from
Portland so we met at Spiffy&amp;rsquo;s at I-5 and Highway 12, stashed his car
in a gravel parking near the 76 gas station and drove my car to the
trailhead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spiffy&amp;rsquo;s is a bit of a dive restaurant off I-5 but there were not a
lot of other places around and we knew we wanted to get some take away
sandwiches.  I showed up first, walked in and started looking at the
menu.  While I was deciding, an older guy with a &amp;ldquo;get off my lawn&amp;rdquo;
look to him walked in with a small lap dog in his arms.  The hostess
informed him that the dog would need to wait outside which caused him
to get really upset and he demanded/yelled that it was a &amp;ldquo;therapy
dog.&amp;rdquo;  The hostess wasn&amp;rsquo;t having any of it and told him that he needed
a permit or some sort of license if it was a therapy dog. At that
point the guy yelled at the hostess &amp;ldquo;go fuck yourself you fucking
whore&amp;rdquo; and stormed out.  That was also the exact moment at which Tobin
walked into the restaurant and only heard the insult as the guy stored
out.  We looked at each other and both cracked up laughing as it was
such a bizarre way to start the trip.  To her credit, the hostess
handled it really well and the sandwiches were pretty good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The trail head is at the end of NF-99, super easy to find and there is
plenty of parking and a flush toilet bathroom. There are also some
interesting informational signs that talk about the eruption and slow
recovery of the area. We were a bit eager to get started so we didn&amp;rsquo;t
linger too long. We ate the sandwiches we had picked up at Spiffy,
sunscreened up and headed off.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Trailhead.jpg&#34; alt=&#34;trailhead&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our packs weighed around 24lbs and since Mount St. Helens is well
known for not having much water each of us was also carrying close
to three liters.&lt;/p&gt;
&lt;h2 id=&#34;day-1---122-miles&#34;&gt;Day 1 - 12.2 miles&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./day1.png&#34; alt=&#34;day1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;starting&#34;&gt;Starting&lt;/h3&gt;
&lt;p&gt;For the first 1.7 miles the hike is along a winding gravel road. It&amp;rsquo;s
blocked off from cars and well maintained, albeit not terribly
interesting.  At the end of the gravel road it&amp;rsquo;s still another 1.2
miles until you actually connect to the Loowit trail.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./TobinJoshua.jpg&#34; alt=&#34;Tobin and Joshua&#34;&gt;&lt;/p&gt;
&lt;p&gt;As we were hiking counter clockwise around the mountain we headed to
the right and started on the Loowit trail.  At this point the scenery
looks sort of like rolling hills with the mountain in the distance.
You can clearly see where the &amp;ldquo;blow out&amp;rdquo; was from the eruption but the
walking is pretty easy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Starting.jpg&#34; alt=&#34;starting&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;loowit-falls&#34;&gt;Loowit Falls&lt;/h3&gt;
&lt;p&gt;Around a mile into the trail there is a turn out to go see Loowit
Falls.  It&amp;rsquo;s about 0.6 miles off the tail but well worth checking out.
Although you can &lt;em&gt;see&lt;/em&gt; the falls, you can&amp;rsquo;t actually get near it and
even getting down to the water is a challenge.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./LoowitFalls.jpg&#34; alt=&#34;loowit falls&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We did meet up with a forest ranger just before we got to the turn off
for the falls and chatted with him a bit.  We asked the ranger if the
waterfall was worth the extra hike (as we had a long ways that day).
His answer was something like &amp;ldquo;yeah, it&amp;rsquo;s pretty good&amp;rdquo; which we didn&amp;rsquo;t
find very convincing.  I think we even said, in a joking way, &amp;ldquo;you are
not exactly selling it here&amp;rdquo; to which he then responded very excitedly
&amp;ldquo;it&amp;rsquo;s a 200 ft waterfall made of glacier melt coming out an active
Volcano!&amp;rdquo;  He was awesome and convinced us to go and waterfall was
amazing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once we were back on the main trail it was another 0.8 miles until
Willow Springs.  Near Willow Springs there was actually water running
across the path and if we had needed water this would have been a
great place to fill up.  It was also the last time we would find water
until we stopped for camp that night.&lt;/p&gt;
&lt;h3 id=&#34;restricted-zone&#34;&gt;Restricted Zone&lt;/h3&gt;
&lt;p&gt;After Willow Springs the scenery gets significantly more barren and
rocky and the mountain looks blown out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;BlastZone.jpg&#34; alt=&#34;Blast&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is also the recovery area so no camping is allowed and really, it
would have been hard to find a good spot to camp if we had
wanted. This goes on for 5.4 miles, but the trail is pretty easy to
see and mostly flat.  In a couple of places we did drift slightly off
the trail but thankfully others have erected rock piles that make
getting back on the trail pretty easy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Restricted.jpg&#34; alt=&#34;restricted&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;castle-ridge&#34;&gt;Castle Ridge&lt;/h3&gt;
&lt;p&gt;As you get close to Castle Ridge the scenery starts to change
significantly.  The trail gets close to the ridge itself in sections
and it&amp;rsquo;s a steep drop down.  Tobin also recognized Huckleberries so we
stopped at several big patches before continuing on.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./CastleRidge.jpg&#34; alt=&#34;castle ridge&#34;&gt;&lt;/p&gt;
&lt;p&gt;From Castle Ridge it&amp;rsquo;s 1.4 miles down to the Toutle River.  The start
of this section is a switch back on a sandy incline that could be
challenging to walk at time.  At times it could take a fair bit of
concentration but it wasn&amp;rsquo;t impossible.  (I would not advise either
this section or the ridge for smaller children.)  After the sandy
incline you enter the forest and continue your switchbacks down.  It
was here that Tobin discovered wild Salmonberries within reach of the
trail and we were again stopping periodically.&lt;/p&gt;
&lt;h3 id=&#34;toutle-river&#34;&gt;Toutle River&lt;/h3&gt;
&lt;p&gt;The last section down to the river itself is basically a steep cliff
for which the forest rangers have attached ropes for hikers to use.
It requires going down backwards, with your feet walking down the cliff
as you go hand over hand on the rope.  Once you get over the initial
shock it is actually rather easy to do.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ToutleRope2.jpg&#34; alt=&#34;toutle rope2&#34;&gt;
&lt;img src=&#34;./ToutleRope3.jpg&#34; alt=&#34;toutle rope3&#34;&gt;
&lt;img src=&#34;./ToutleRiver.jpg&#34; alt=&#34;toutle river&#34;&gt;&lt;/p&gt;
&lt;p&gt;When we were there the Toutle River was around 5 feet across and we
were able to cross easily by jumping across rocks.  We set up camp
next to the river and the sandy floor made for a really plush
ground. It was honestly one of the best night sleeps I&amp;rsquo;ve ever had
camping.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ToutleRiver1.jpg&#34; alt=&#34;toutle river&#34;&gt;&lt;/p&gt;
&lt;p&gt;There were lots of places to set up our tents and when we arrived we
were the only people there, although another group did arrive just
before dusk.&lt;/p&gt;
&lt;h2 id=&#34;day-2---102-miles&#34;&gt;Day 2 - 10.2 miles&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./day2.png&#34; alt=&#34;day2&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the morning we packed up, filled our water bottles and used the
ropes on the other side to climb out.  The path to climb out was
easier than the one to climb down and we probably could have managed
it without the rope.&lt;/p&gt;
&lt;p&gt;Our goal was to hike down near the Summit trail, find a spot to camp
and hopefully water nearby.  The other campers at the river were
hiking the mountain in a clockwise direction and said they didn&amp;rsquo;t see
any water other than June Lake. So our fall back plan was to find a
camping spot around the Summit trail, dump our packs and hike down to
June Lake for water.&lt;/p&gt;
&lt;h3 id=&#34;crescent-ridge&#34;&gt;Crescent Ridge&lt;/h3&gt;
&lt;p&gt;Right out of the river the hike is a brutal uphill climb that takes you
from 3200 ft to 4700 ft in 1.7 miles.  It&amp;rsquo;s almost entirely in the
trees so you don&amp;rsquo;t get much of a view either.  We did stop to take a
couple of breaks on the hike up as we were still finding wild
Salmonberries and Huckleberries.  The Huckleberries especially were
perfectly ripe and really good.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./TobinRelaxing.jpg&#34; alt=&#34;Tobin Relaxing&#34;&gt;&lt;/p&gt;
&lt;p&gt;About 1.5 miles after reaching the top of that climb the trail crosses
another ravine which again requires the use of attached ropes to climb in
and out of.  There was no water to cross in this one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Rope1.jpg&#34; alt=&#34;rope1&#34;&gt;&lt;/p&gt;
&lt;p&gt;After that the next 4 miles is a really nice and relaxing hike through
some beautiful scenery..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Day2Trail.jpg&#34; alt=&#34;Trail&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, once we reached the trail for Summit Route we realized that
&amp;ldquo;finding a camping spot near by&amp;rdquo; was virtually impossible.  The trail
is really cut into a steep mountain side and the flora is pretty thick
on either side of the trail.  We either had to hike back a mile or so
to where there were some flat areas to camp, or hike forward and hope
it flattened out.  Hiking back would have taken us further away from
water so we decided to go forward.&lt;/p&gt;
&lt;h3 id=&#34;chocolate-falls&#34;&gt;Chocolate Falls&lt;/h3&gt;
&lt;p&gt;Almost exactly two miles from Summit Route is Chocolate Falls and we
decided to make camp there as there are plenty of flat areas nearby
just before you cross over the falls. However, if you venture a little
ways towards the cliff (and away from the falls) you will find a
really nice circular camping area, complete with a fire pit (which we
did not use).  However, being so far off the path was really nice as
we were not bothered at all by people passing on the trail and we felt
secure about leaving our stuff there while we hiked to the summit the
next day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ChocolateCamp.jpg&#34; alt=&#34;chocolate camp&#34;&gt;&lt;/p&gt;
&lt;p&gt;Chocolate Falls is named as such because the water contains a &lt;em&gt;lot&lt;/em&gt; of
sediment and takes on a chocolate milk color/consistency.  But there
was water and by straining it through a bandana and our Sawyer squeeze
bag we were able to filter it enough to drink.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ChocolateFalls1.jpg&#34; alt=&#34;chocolate falls1&#34;&gt;
&lt;img src=&#34;./ChocolateFalls2.jpg&#34; alt=&#34;chocolate falls2&#34;&gt;
&lt;img src=&#34;./ChocolateFalls3.jpg&#34; alt=&#34;chocolate falls3&#34;&gt;
&lt;img src=&#34;./ChocolateFalls4.jpg&#34; alt=&#34;chocolate falls4&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using the bandana was not part of our inital plan but the water had a
lot of silt in it and Tobin had a brand new bandana with him.
Regretfully the bandana was red and had probably only been washed once
so when we were straining the water it took on a very pink color.
Even after using the Sawyer squeeze bag it still had a bit of a
pinkish hue to it, but it didn&amp;rsquo;t seem to contribute any taste.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;day-3---82-miles---the-summit&#34;&gt;Day 3 - 8.2 miles - The Summit&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./day3.png&#34; alt=&#34;day3&#34;&gt;&lt;/p&gt;
&lt;p&gt;Up until now our weather had been perfect but this morning it was
raining.  We had initially thought we would start on our summit hike
at 8am, but the rain was coming down hard enough that we just stayed
in our tents for a couple of hours to see if it would clear.  By 11am the
rain was starting to let up enough so we decided to get going before
it was too late.  Both of us took our backpacks but only brought with us
some food, water, warm clothes and our permit.&lt;/p&gt;
&lt;p&gt;We now had to backtrack the two miles back to the Summit Route.  This
was mostly uphill and because of the rain we were getting soaked every time
we brushed up against the plants on the sides of the trail.&lt;/p&gt;
&lt;h3 id=&#34;summit-ridge&#34;&gt;Summit Ridge&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;./SummitRoute1.jpg&#34; alt=&#34;summit route1&#34;&gt;&lt;/p&gt;
&lt;p&gt;This was not an easy hike.  The very start of this path is like a
normal, albeit steep, trail but it quickly turns into climbing over
volcanic boulders.  There isn&amp;rsquo;t really a trail to follow anymore, but
the route is marked by posts which are placed just close enough
together that you can just see the next one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./SummitRoute2.jpg&#34; alt=&#34;summit route2&#34;&gt;&lt;/p&gt;
&lt;p&gt;We passed a couple of people coming down who had gone up very early
that morning and mentioned that the entire top of the mountain was
pretty well fogged in and there was not much to see.  Still, we were
determined and continued up. The entire hike is about 2.1 miles, but
it is very slow going.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./SummitRoute3.jpg&#34; alt=&#34;summit route3&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;About 2/3rds of the way up we met a forest ranger who told us that
&amp;ldquo;there is a crack at the rim and it appears that a section is about to
fall in,&amp;rdquo; so we should stay back several meters from the edge.  He
also mentioned that because of the weather he was guessing that of the
100 passes that were issued for that day, probably about 20 of them
were going to actually be used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;pumice-path&#34;&gt;Pumice Path&lt;/h3&gt;
&lt;p&gt;As hard as the hike was so far, the pumice path that is at the end is
even harder.  The incline is very steep and with every step up you
take you slip back down almost a half a step.  It&amp;rsquo;s like this for
almost half a mile and the pumice easily doubles the distance. There
is also not a clear visual for how far you still have to go so it can
seem a bit unending at times.&lt;/p&gt;
&lt;h3 id=&#34;the-top&#34;&gt;The top&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;./Summit1.jpg&#34; alt=&#34;summit 1&#34;&gt;
&lt;img src=&#34;./Summit2.jpg&#34; alt=&#34;summit 2&#34;&gt;
&lt;img src=&#34;./Summit3.jpg&#34; alt=&#34;summit 3&#34;&gt;
&lt;img src=&#34;./View.jpg&#34; alt=&#34;view&#34;&gt;&lt;/p&gt;
&lt;p&gt;The good thing about waiting those three hours before leaving camp is
that by the time we did reach the top the clouds were clearing and we
could see all around the mountain.  Unfortunately, the clouds &lt;em&gt;in&lt;/em&gt; the
crater did not clear so we never really got a good full look inside,
although from time to time we got a couple of good glimpses.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Crater.jpg&#34; alt=&#34;cater&#34;&gt;&lt;/p&gt;
&lt;p&gt;Otherwise the view from the top is really amazing and I&amp;rsquo;m glad we made
the trip.  We did walk part way around the edge and we did see the
crack the ranger was talking about.  Because of the scale of
everything, looking over the edge didn&amp;rsquo;t seem like a huge drop, but
apparently it&amp;rsquo;s something like a 2600 ft drop.&lt;/p&gt;
&lt;p&gt;After spending about 30 mins at the top we headed down which gives you
a totally new perspective on just how far you have climbed and how
much on a ridge you really are.&lt;/p&gt;
&lt;p&gt;By the time we reached our camp at Chocolate Falls it was getting
dark.  We decided to grab some more water but then ended up just
leaving it in our bottles so we could filter it the next day.&lt;/p&gt;
&lt;p&gt;Day 4 - 12.3 miles&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./day4.png&#34; alt=&#34;day4&#34;&gt;&lt;/p&gt;
&lt;p&gt;The next morning we were awakened by the sounds of runners going down
the trail.  It turns out that there were several races going on that
day, with one of them being a full run around the mountain.&lt;/p&gt;
&lt;p&gt;It also turns out that Chocolate Falls does not normally run in the
mornings as it needs the afternoon sun to melt the snow.  So it was
really fortunate we had collected water the night before as it was
totally dry that morning.&lt;/p&gt;
&lt;p&gt;It was a 1.2 mile hike to the cut off for June Lake and shortly past
that past a creek that was flowing and allowed us to get more water.
This water was clear and didn&amp;rsquo;t need to be double filtered.  After
that it was 4.8 miles to Pumice Butte.  The hike was really beautiful
and you can see several other mountains in the distance.  We stopped
often for Huckleberries and the very occasional Salmonberry and to move
off the path at times for runners.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Trail1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Trail2.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Trail3.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Trail4.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;pumice-butte&#34;&gt;Pumice Butte&lt;/h3&gt;
&lt;p&gt;Several people claim you can get water near Pumice Butte but all the
water we saw was very stagnant and didn&amp;rsquo;t look good at all.  The 1.8
miles of The Plains of Abraham are flat, long and because of the time
of day we were there, very hot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Flats1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Flats2.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Flats3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At the end of the Flats we could have opted to take a short cut back
to the car (and my feet were killing me by this point), or we could
continue on the Loowit trail and complete the full loop.  We opted to
complete the full loop and just before we headed up Windy pass we
crossed a running creek and were able to fill up on water one last
time.&lt;/p&gt;
&lt;h3 id=&#34;windy-pass&#34;&gt;Windy pass&lt;/h3&gt;
&lt;p&gt;The climb over Windy pass was harder than I was expecting as you have
a steep climb up, and short jog forward and then a steep switchback
back down.  Also, deceptively, they have put posts that run up to the
left, giving the impression you have to climb much higher than you
actually do.  I&amp;rsquo;m not sure if this was someones idea of a joke or if
there is another trail up that way.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;WindyPass.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In any case we made it down and eventually made it back to the spot
where we first started on the Loowit trail.  From there it was 2.5
miles back to the car and by now we were feeling every step of it.
Also the winding gravel road has several false turns where you can
easily fall into thinking that the car is &amp;ldquo;just ahead&amp;rdquo;.&lt;/p&gt;
&lt;h3 id=&#34;the-car&#34;&gt;The car&lt;/h3&gt;
&lt;p&gt;Getting back to the car we changed into clean(er) clothes and headed
back to Tobins car, stopping off at Plaza Jalisco&amp;rsquo;s Mexican restaurant
for dinner.&lt;/p&gt;
&lt;h2 id=&#34;retrospective&#34;&gt;Retrospective&lt;/h2&gt;
&lt;h3 id=&#34;equipment&#34;&gt;Equipment&lt;/h3&gt;
&lt;h4 id=&#34;boots&#34;&gt;Boots&lt;/h4&gt;
&lt;p&gt;Tobin was wearing hiking shoes while I was wearing hiking boots.
Although my boots did better when it was wet, and when we were
climbing over the boulders, I think in the long run wearing hiking
shoes would have been a better call.  They are lighter and since we
were on a trail for a majority of the time I think the boots were,
perhaps, overkill.  And by the last day, especially that last 2.5
miles, my feet were killing me.  Tobin commented that his feet hurt as
well, but I think the boots were adding to my discomfort.&lt;/p&gt;
&lt;h4 id=&#34;socks&#34;&gt;Socks&lt;/h4&gt;
&lt;p&gt;I should have brought more socks.  In the past when I&amp;rsquo;ve hiked for a
couple of days (2-4) I usually bring just two pairs of socks, but for
those hikes I&amp;rsquo;m often spending the day at the destination or wearing
my camp shoes. For this trip we were hiking every day and it would
have been really nice to put on a clean pair of socks every morning.
Tobin washed his out in the river which seems to have helped, but
really I just think at least one pair of socks a day is the minimum
and perhaps two.&lt;/p&gt;
&lt;h4 id=&#34;camera&#34;&gt;Camera&lt;/h4&gt;
&lt;p&gt;Tobin and I both brought cameras with us, but while I just brought my
cell phone (because, hey, it has a camera in it) Tobin brought an
actual digital camera.  However, since I had my phone off for the
majority of the trip, taking a picture meant that I had to stop, take
out my phone, wait for it to turn on, take a picture and then shut it
down and put it away again.  Tobin, on the other hand, had a handy
pouch on his belt and was able to quickly take out his camera to take
pictures.  I had thought that non-SLR digital cameras were a thing
of the past, but after this trip I now included a digital camera in my
packing list.&lt;/p&gt;
&lt;h4 id=&#34;water&#34;&gt;Water&lt;/h4&gt;
&lt;p&gt;Similar to the camera, Tobin&amp;rsquo;s backpack also enabled him to carry at
least one liter of water where he could easily reach and drink from
it.  Mine was attached to the back of my backpack making it a pain and
often I had to ask Tobin to get my water for me.  As a consequence I
probably drank less than I should have.  I need to either figure out a
better way to hook up a bottle, or get one of those camel packs.&lt;/p&gt;
&lt;h4 id=&#34;more-space&#34;&gt;More space&lt;/h4&gt;
&lt;p&gt;I had brought with me some fleece pants and a fleece top and while
these don&amp;rsquo;t weigh much, they do take up a fair bit of space.  Weight
wasn&amp;rsquo;t really an issue on this trip, but space was.  As it was, my bag
was packed really tight which required extra time packing up in the
morning and trying to get to anything in my pack.  Since this trip I
have replaced some of the gear in my pack with things that just take
up less space so I can treat my bag as more of a simple stuff sack.&lt;/p&gt;
&lt;h4 id=&#34;bivy-or-tent&#34;&gt;Bivy or Tent&lt;/h4&gt;
&lt;p&gt;I really like sleeping in a bivy but at the last moment I decided to
swap my bivy for a tent which I feel was a good call.  I like using a
bivy because they are fast to set up and overall just more fun.
However, on this trip it would have been miserable sleeping in the
bivy when it was raining and the 3 hours we hung out in the tent
before climbing to the summit.  I&amp;rsquo;m also not sure I would have been as
keen on leaving my bivy out when we were hiking.&lt;/p&gt;
&lt;h4 id=&#34;sleeping-pad&#34;&gt;Sleeping pad&lt;/h4&gt;
&lt;p&gt;I had a blow up air pad while Tobin had the waffle mat.  I think the
air pad is more comfortable, but you do run the risk that it could
rupture and then you can be in some real trouble.  I did have a small
patch kit with me, but I&amp;rsquo;ve never used it and I&amp;rsquo;m not sure how well it
would work if I had to patch my air pad at night.  Additionally, the
air pad is noisy as hell when you move around on it.  It makes a sound
that is similar to rubbing a balloon. For next season I think I&amp;rsquo;m going
to try using a waffle pad and see how that works.  I also like that
the set up for the waffle pad is super quick.&lt;/p&gt;
&lt;h4 id=&#34;hiking-gloves&#34;&gt;Hiking gloves&lt;/h4&gt;
&lt;p&gt;I didn&amp;rsquo;t have a good pair of hiking gloves with me and I really wish I
did.  I did have some fingerless gloves (aka hobo gloves) which
convert to mittens, and while they were warm enough they were not the
best for climbing with.  Ultimately I need to get a good pair of
gloves that are warm enough for the evenings, but also rugged enough
to climb over boulders with.  Or, if no such glove exists, then
perhaps two pairs, one for warmth and one for climbing.&lt;/p&gt;
&lt;h4 id=&#34;folding-chair&#34;&gt;Folding chair&lt;/h4&gt;
&lt;p&gt;I have also added to my bag a folding chair.  Yeah, I could just sit
on stones and trees and the such, but after a long day, and in the
morning, it is nice to be able to sit on a real chair.  Sitting on the
stones and logs meant that I was constantly trying to find a
comfortable one or leaning to the side as I am sitting.  The new
folding chairs are down around a pound now so I&amp;rsquo;m hoping to try this
out on my next hike.&lt;/p&gt;
&lt;h4 id=&#34;sawyer-squeeze-bottles&#34;&gt;Sawyer squeeze bottles&lt;/h4&gt;
&lt;p&gt;These things are awesome.  When we got home and cleaned it out it was
amazing how brown the water was and how much they filtered things.
They are awesome, I just wanted to point that out.&lt;/p&gt;
&lt;h3 id=&#34;hike&#34;&gt;Hike&lt;/h3&gt;
&lt;h4 id=&#34;bugs&#34;&gt;Bugs&lt;/h4&gt;
&lt;p&gt;Normally I&amp;rsquo;m bothered by mosquitoes but I don&amp;rsquo;t think we encountered
any on this trip.  Perhaps this is due to the general lack of
water but even the flies were not that bad.&lt;/p&gt;
&lt;h4 id=&#34;overall&#34;&gt;Overall&lt;/h4&gt;
&lt;p&gt;All in all we had a fantastic time and hiked a total of 42.9 miles.
The changes in the scenery were really interesting and the rope climbs
and wild berries made for an interesting trek. Even though we had to
scramble to find an alternative, I really think entering at Windy Pass
and working counter clockwise worked out well for us.  The only
disappointment was that the weather wasn&amp;rsquo;t clearer when we were at the
top, but it just means we will have to return sometime.&lt;/p&gt;
&lt;h3 id=&#34;forest-rangers&#34;&gt;Forest Rangers&lt;/h3&gt;
&lt;p&gt;And finally, I want to give special thanks to the awesome forest
rangers we met along the way.  They are super fun to talk with and a
treasure trove of information. They are also the ones that go through
each year and set the ropes so you can climb down and up the cliffs.
So thank you!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Samba4 Domain Controller on Ubuntu 18.04</title>
      <link>/post/samba4-ubuntu18.04/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/samba4-ubuntu18.04/</guid>
      <description>&lt;h2 id=&#34;quick-background&#34;&gt;Quick Background&lt;/h2&gt;
&lt;p&gt;I volunteer as a Systems Administrator for a small medical
clinic. They have a very slim IT budget so while their desktop systems
are primarily Windows 10, I&amp;rsquo;ve configured most of their server
infrastructure with Linux. A &lt;a href=&#34;https://www.proxmox.com/&#34;&gt;Proxmox&lt;/a&gt;
server is used to manage their virtualized environment and I&amp;rsquo;m using
&lt;a href=&#34;https://www.samba.org/&#34;&gt;Samba4&lt;/a&gt; for their Active Directory
Domain Controller.&lt;/p&gt;
&lt;p&gt;When I first set up Samba4 as their Active Directory I was able to use
&lt;a href=&#34;https://www.centos.org/&#34;&gt;CentOS&lt;/a&gt; 6 with the Samba4 binary packages
from SerNet. Although this has been working well enough, it has always
been a little quirky and I had only ever set up a single Domain
Controller. So recently I decided to upgrade their Domain Controllers
to the newest version and add a second Domain Controller.&lt;/p&gt;
&lt;p&gt;Initially I tried to find the SerNet packages but it appears they have
rebranded themselves as &lt;a href=&#34;https://samba.plus/&#34;&gt;Samba+&lt;/a&gt; and now charge a
subscription fee for the binary packages.  While I would love to
support them, paying a subscription fee is not an option for this
clinic.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d really like to stick with CentOS as my server distribution as I
have a lot of experience with it and have always found it to be a
solid, minimial distribution. However, for reasons RedHat has decided
that the Samba4 build that comes with Fedora should not include the
ability to act as an Active Directory Domain Controller.&lt;/p&gt;
&lt;p&gt;I could build the sources from scratch and still use CentOS, but that
would require installing all the build tools on each server and I&amp;rsquo;m
trying to keep them as light as possible.  Plus, building from scratch
often introduces its own host of challenges and I really just want to
set this up and move on to my next project.  So instead I&amp;rsquo;m going to
give a go at using &lt;a href=&#34;https://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, which I really like
as a desktop system but have never been terribly thrilled with as a
server system.&lt;/p&gt;
&lt;p&gt;For setting this up I am mostly following the instructions from
&lt;a href=&#34;https://www.tecmint.com/install-samba4-active-directory-ubuntu/&#34;&gt;tecmint&lt;/a&gt;
and specifically &lt;a href=&#34;https://www.tecmint.com/join-additional-ubuntu-dc-to-samba4-ad-dc-failover-replication/&#34;&gt;this
one&lt;/a&gt;. However,
these instructions were written for Ubuntu 16.04 so I&amp;rsquo;m making this
post to document the steps I took in setting up Samba4 on an Ubuntu
system.&lt;/p&gt;
&lt;h2 id=&#34;networking-overview&#34;&gt;Networking overview&lt;/h2&gt;
&lt;p&gt;For reference, the main gateway is a
&lt;a href=&#34;https://www.pfsense.org/&#34;&gt;pfSense&lt;/a&gt; box set up at 10.0.1.1.  This runs
as the primary DNS and DHCP server for the network.  The domain name
I&amp;rsquo;ll use in the instructions is &lt;code&gt;hrakaroo.lan&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My Active Directory domain is &lt;code&gt;ad.hrakaroo.lan&lt;/code&gt;.  I&amp;rsquo;ve specifically
set this up so that Active Directory is on it&amp;rsquo;s own sub domain as I
don&amp;rsquo;t want the rest of the server infrastructure to be dependent on
Active Directory.  I&amp;rsquo;d rather isolate Active Directory to its own
area.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-new-system-in-proxmox&#34;&gt;Creating a new system in Proxmox&lt;/h2&gt;
&lt;p&gt;In Proxmox I&amp;rsquo;ve created the following new host&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hostname: adc1
Memory: 2 G
Disk: 32 G
Processors: 1
Cores: 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In retrospect (by looking at the usage charts in Proxmox) it looks
like I could have cut the memory, disk and cores in half and it would
have been fine, but I&amp;rsquo;m going to leave it as is for now.&lt;/p&gt;
&lt;p&gt;Once the vm is created, start the server.&lt;/p&gt;
&lt;p&gt;Most of the installation is pretty straightforward so I&amp;rsquo;m only
going to highlight when I didn&amp;rsquo;t select the default.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Installer update available&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;During the install it suggests that an update to the installer
is available and asks if you want to update.  I&amp;rsquo;m not sure if it
matters much, but I said yes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Networking&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Edit the IPv4 configuration and select Manual&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Subnet: 10.0.1.0/24
Address: 10.0.1.25
Gateway: 10.0.1.1
Name servers: 10.0.1.26
Search domains: ad.hrakaroo.lan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;10.0.1.26 is the name servers for the existing Active Directory
Domain Controller. Once the system is fully configured I&amp;rsquo;ll change
this, but it makes the initial setup much easier if this points
at your existing Domain Controller.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profile Setup&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is the first thing I don&amp;rsquo;t like about Ubuntu.  I&amp;rsquo;d rather just
have a password set for the root account.  I get the reason why they
are doing this, but for my super small setup this is more of an
annoyance than a help.  Sadly you also can&amp;rsquo;t use general accounts like
&amp;lsquo;admin&amp;rsquo; or &amp;lsquo;staff&amp;rsquo; either.  So I ended up creating a personal account
for Joshua Gerth.  (This turned out to be a bit of a mistake, more
on this can be found in the &lt;a href=&#34;#profile-mistake&#34;&gt;additional things&lt;/a&gt;
at the bottom.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SSH Setup&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[X] Enable install the OpenSSH server.&lt;/p&gt;
&lt;h2 id=&#34;basic-server-configuration&#34;&gt;Basic Server Configuration&lt;/h2&gt;
&lt;p&gt;For almost all of these commands I find it easier to work by ssh&amp;rsquo;ing
into the box rather than using the Proxmox console as copy/paste and
editing all work better.&lt;/p&gt;
&lt;h3 id=&#34;update-and-install-emacs&#34;&gt;Update and install emacs&lt;/h3&gt;
&lt;p&gt;Okay, once the server is up and running I always run the update commands
to make sure everything is up to date:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo apt update 
$ sudo apt upgrade
$ sudo apt dist-upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and also, because vi is terrible I always install emacs:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo apt install -y emacs
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;turn-off-ipv6&#34;&gt;Turn off IPv6&lt;/h3&gt;
&lt;p&gt;This may not be &lt;em&gt;necessary&lt;/em&gt;, but I find that debugging things when
only IPv4 is enabled to be a lot easier.  The environment I&amp;rsquo;m
installing this in is small enough that we are not at risk of running
out of IP numbers any time soon and since everything gets NAT&amp;rsquo;ed
anyhow I don&amp;rsquo;t really see a need to enable IPv6.&lt;/p&gt;
&lt;p&gt;That said, this is the second thing that I don&amp;rsquo;t care for about
Ubuntu.  In CentOS turning off IPv6 is sort of trivial, but on Ubuntu
I this proved to be rather difficult.  Most of the existing
suggestions only turned off part of IPv6 and it was only after a lot
of trial and error did I happen on a post with the best answer.&lt;/p&gt;
&lt;p&gt;Basically you need to edit &lt;code&gt;/etc/default/grub&lt;/code&gt; and set&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  GRUB_CMDLINE_LINUX=&amp;quot;xxxxx ipv6.disable=1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(For me there was nothing in the xxxxx area, but if you have any
existing options then leave them there and add the ipv6.disable at the
end.)&lt;/p&gt;
&lt;p&gt;and then run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;turn-off-dnsmasq&#34;&gt;Turn off dnsmasq&lt;/h3&gt;
&lt;p&gt;This is the third thing that I don&amp;rsquo;t like about Ubuntu, it runs a stub
dnsmasq as a DNS caching server.  Again, I get &lt;em&gt;why&lt;/em&gt; they did this,
but I&amp;rsquo;ve never found this to be useful on a server and nine out of ten
times it just causes problems.&lt;/p&gt;
&lt;p&gt;To disable it I&amp;rsquo;m mostly following
&lt;a href=&#34;https://askubuntu.com/questions/1081832/how-do-i-disable-systemd-resolved-and-replace-with-something-sane-on-ubuntu-18&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/systemd/resolved.conf&lt;/code&gt; and add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DNSStubListener=no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then remove the existing symlink at /etc/resolv.conf and rebuild it&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ rm /etc/resolv.conf
$ ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since this has been such a thorn in my side I prefer to reboot here
to make damn sure the new settings have taken.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/resolv.conf&lt;/code&gt; should now show the values that you entered on
initial setup.&lt;/p&gt;
&lt;h3 id=&#34;ntp&#34;&gt;NTP&lt;/h3&gt;
&lt;p&gt;Domain Controllers are sensitive to clock drift and need to be
configured to use a network time server.  Normally I would configure
&lt;code&gt;ntpd&lt;/code&gt; on the host, but Ubuntu has decided to ship with &lt;code&gt;timedatectl&lt;/code&gt;
instead which claims to be a lightweight ntp client.  (Humorously, 90%
of the google searches for &lt;code&gt;timedatectl&lt;/code&gt; suggest turning it off and
replacing it with a real ntpd, however, I&amp;rsquo;m going to try sticking with
timedatectl for now.)&lt;/p&gt;
&lt;p&gt;First I like to set the timezone so I don&amp;rsquo;t need to convert
everything&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ timedatectl set-timezone America/Los_Angeles
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, edit the &lt;code&gt;/etc/systemd/timesyncd.conf&lt;/code&gt; file and set the NTP entry
to point to your NTP server. (I&amp;rsquo;m running an NTP server on another VM at
10.0.1.22).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Time]
NTP=10.0.1.22
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;restart the timesyncd&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ systemctl restart systemd-timesyncd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and verify it with&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cat /var/log/syslog | grep systemd-timesyncd
   XXX adc1 systemd-timesyncd[1416]: Synchronized to time server 10.0.1.22:123 (10.0.1.22).
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-samba&#34;&gt;Install Samba&lt;/h2&gt;
&lt;p&gt;Since we are actually about to install Samba I like to do one more
reboot here.&lt;/p&gt;
&lt;h3 id=&#34;update-the-hosts-file&#34;&gt;Update the hosts file&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;/etc/hosts&lt;/code&gt; file should have an entry for every domain
controller, including itself.  (I also removed the old IPv6 stuff)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;127.0.0.1 localhost
10.0.1.25 adc1.ad.hrakaroo.lan adc1
10.0.1.26 oldadc.ad.hrakaroo.lan oldadc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, 10.0.1.25 is this box, the new Active Directory server and 10.0.1.26
is the old Active Directory server.&lt;/p&gt;
&lt;h3 id=&#34;install-samba4&#34;&gt;Install Samba4&lt;/h3&gt;
&lt;p&gt;Actually install samba&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ apt install -y samba krb5-user krb5-config winbind libpam-winbind libnss-winbind
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you already have things correctly setup then this should
automatically find the kerberos SRV records for your domain which are
being hosted on your existing Active Directory server, if not it may
prompt you for them.  If it does prompt you enter the domain in all
upper case for the Default realm and in regular case for the Kerberos
servers and Administrative server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   Default Kerberos realm:  AD.HRAKAROO.LAN
   Kerberos servers realm:  ad.hrakaroo.lan
   Administrative server:   ad.hrakaroo.lan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verify kerberos works by&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ kinit jgerth@AD.HRAKAROO.LAN
   Password for jgerth@AD.HRAKAROO.LAN:  &amp;lt;passwd&amp;gt;
$ klist
   Ticket cache: FILE:/tmp/krb5cc_0
   Default principal: jgerth@AD.HRAKAROO.LAN

   Valid starting     Expires            Service principal
   03/27/20 18:54:49  03/28/20 04:54:49  krbtgt/AD.HRAKAROO.LAN@AD.HRAKAROO.LAN
           renew until 03/28/20 18:54:46
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;join-the-domain&#34;&gt;Join the Domain&lt;/h3&gt;
&lt;p&gt;Remove the existing smb.conf as it will be recreated by samba-tool.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ systemctl stop samba-ad-dc smbd nmbd winbind
$ mv /etc/samba/smb.conf /etc/samba/smb.conf.initial
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use samba-tool to join the domain&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ samba-tool domain join ad.hrakaroo.lan DC -U &amp;quot;AD\jgerth&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now configure the server to start samba-ad-dc automatically&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ systemctl mask smbd nmbd winbind
   Created symlink /etc/systemd/system/smbd.service → /dev/null.
   Created symlink /etc/systemd/system/nmbd.service → /dev/null.
   Created symlink /etc/systemd/system/winbind.service → /dev/null.
$ systemctl unmask samba-ad-dc
   Removed /etc/systemd/system/samba-ad-dc.service.
$ systemctl enable samba-ad-dc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the host command to verify your configuration.  This apparently
hits every nameserver listed so you may get some errors when it tries
to hit the non-active directory DNS servers.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ host ad.hrakaroo.lan
   ad.hrakaroo.lan has address 10.0.1.26
   ad.hrakaroo.lan has address 10.0.1.25
   Host ad.hrakaroo.lan not found: 3(NXDOMAIN)
   Host ad.hrakaroo.lan not found: 3(NXDOMAIN)

$ host -t SRV _kerberos._udp.ad.hrakaroo.lan
   _kerberos._udp.ad.hrakaroo.lan has SRV record 0 100 88 oldadc.ad.hrakaroo.lan.
   _kerberos._udp.ad.hrakaroo.lan has SRV record 0 100 88 adc1.ad.hrakaroo.lan.

$ host -t SRV _ldap._tcp.ad.hrakaroo.lan
   _ldap._tcp.ad.hrakaroo.lan has SRV record 0 100 389 oldadc.ad.hrakaroo.lan.
   _ldap._tcp.ad.hrakaroo.lan has SRV record 0 100 389 adc1.ad.hrakaroo.lan.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;change-dns&#34;&gt;Change DNS&lt;/h2&gt;
&lt;p&gt;At this point you could be done as the server is now up and running.
However, it is technically using the other domain controller for DNS
lookups.  Even if I wasn&amp;rsquo;t planning on decommissioning the older
server this would still be creating an out of band dependency between
them and as Active Directory is, itself, a DNS server I prefer to update
the server to use itself for DNS lookups.  (Similar to what
Ubuntu was initially trying to do with the dnsmasq stuff).&lt;/p&gt;
&lt;p&gt;To do this, modify &lt;code&gt;/etc/netplan&lt;/code&gt; and set &lt;code&gt;127.0.0.1&lt;/code&gt; as first in
your nameserver list and then the upstream DNS server second.&lt;/p&gt;
&lt;p&gt;Also verify that &lt;code&gt;search&lt;/code&gt; is set to use the ad domain first and then
your global domain.  Like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            nameservers:
                addresses:
                - 127.0.0.1
                - 10.0.1.1
                search:
                - ad.hrakaroo.lan
                - hrakaroo.lan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As always, reboot and check the values in the &lt;code&gt;/etc/resolv.conf&lt;/code&gt; and
do a couple of tests with &lt;code&gt;nslookup&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configure-proxmox-to-boot-the-server&#34;&gt;Configure Proxmox to boot the server&lt;/h2&gt;
&lt;p&gt;I also configure Proxmox to start the service at boot.  This way if there
is a power outage Proxmox will be sure to start your domain controllers.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Options -&amp;gt; Start at boot -&amp;gt; True&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;additional-things&#34;&gt;Additional things&lt;/h2&gt;
&lt;h3 id=&#34;decommissioning-the-old-active-directory-controller&#34;&gt;Decommissioning the old Active Directory Controller&lt;/h3&gt;
&lt;p&gt;With the new Domain Controller up you can now decommission the old
Domain Controller by moving the roles (7) from the old DC to your
new one.  However, the version of Samba which shipps with Ubuntu 18.04
is 4.7 which, apparently, has a bug with the python code that you
use to move the roles.  To fix this I had to edit
&lt;code&gt;/usr/lib/python2.7/dist-packages/samba/netcmd/fsmo.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and insert line&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import samba.drs_utils
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;just after&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import samba
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;around line 20. After doing this the command to move the roles worked
just fine and I was able to fully decommission the older active domain
controller.&lt;/p&gt;
&lt;h3 id=&#34;profile-mistake&#34;&gt;Removing the profile&lt;/h3&gt;
&lt;p&gt;It turns out that creating the profile as I did during the initial set
up of Ubuntu was a bit of a mistake.  It didn&amp;rsquo;t cause an issue for
this server but it did on a file server I set up later which was also
on Ubuntu. The issue was that the Ubuntu account &lt;code&gt;jgerth&lt;/code&gt; conflicted
with the Active Directory accouunt &lt;code&gt;jgerth&lt;/code&gt; and made testing Windows File
Sharing under my account difficult.&lt;/p&gt;
&lt;p&gt;I could have addressed this by using a unique login on the Ubuntu
server (like &lt;code&gt;jogerth&lt;/code&gt;) but that feels like a pretty hacky solution.
Plus, it raises the bigger issue that ultimately someday someone else
is probably going to take over for me as the sysadmin and I don&amp;rsquo;t
really want them to have to use my account.  The &lt;em&gt;right&lt;/em&gt; way to solve
this is to create an LDAP server for the Linux boxes and host the
logins centrally, but this feels a bit like overkill to me as we
currently only have around 5 Linux systems and, at least for the time
being, I would be the only person in the LDAP server.&lt;/p&gt;
&lt;p&gt;I suppose I could bind the Linux boxes in to the Active Directory LDAP
server, but that creates a bit of a chicken and egg dependency on
Active Directory that I&amp;rsquo;m just not comfortable with.&lt;/p&gt;
&lt;p&gt;What I really want is just a generic sysadmin account, but if you are
going to do that then why not use the one that already comes with
every Unix/Linux system, &lt;code&gt;root&lt;/code&gt;.  So in the end I configured an
explicit password for &lt;code&gt;root&lt;/code&gt;, enabled SSH login for root and deleted
the account I created on setup.  I would never recommend this for a
larger environment, but for my small setup this worked out best.&lt;/p&gt;
&lt;h2 id=&#34;closing-thoughts&#34;&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;In the end I&amp;rsquo;m glad I set this up from scratch rather than use the
build and instructions from SerNet. I have a better understanding
of what everything is doing and the weird quirkiness I was
experiencing with the old server has gone away (although, to be fair,
that could have been due to the older version I was running.)
I also feel more comfortable with the samba tool and adding and
removing domain controllers.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m still not a huge fan of Ubuntu as a server. I don&amp;rsquo;t care for the
dnsmasq stub, the replacement for ntpd or how it forces you to create
a non-root account, but since it is a popular system I was able to
search for most of the errors I did encounter.&lt;/p&gt;
&lt;h2 id=&#34;supporting-windows-11-22h2&#34;&gt;Supporting Windows 11 22H2&lt;/h2&gt;
&lt;p&gt;In the two years since I set this system up it has been running nearly
flawlessly. The only real issue is that with Windows 11 update 22H2
Microsoft changed the encryption protocol (or something similar) and
they are no longer able to bind to the domain controller. (This does
not seem to impact existing systems that are already bound to the
domain.)&lt;/p&gt;
&lt;p&gt;The following Reddit link talks about the issue in depth
&lt;a href=&#34;https://www.reddit.com/r/sysadmin/comments/xoqend/samba_495_windows_11_22h2_kerberos/&#34;&gt;https://www.reddit.com/r/sysadmin/comments/xoqend/samba_495_windows_11_22h2_kerberos/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fix is to update Samba to version 4.16.0, which isn&amp;rsquo;t directly
available for Ubuntu 18.04. The recommended path is probably to
upgrade to Ubuntu 22.x, but since that&amp;rsquo;s bound to cause it&amp;rsquo;s own host
of complications I instead opted to just change the source for Samba
by following these instructions&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ubunlog.com/en/ya-fue-liberada-la-nueva-version-de-samba-4-16-0-y-estos-son-sus-cambios/&#34;&gt;https://ubunlog.com/en/ya-fue-liberada-la-nueva-version-de-samba-4-16-0-y-estos-son-sus-cambios/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:linux-schools/samba-latest
sudo apt-get update
sudo apt install samba
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was enough to upgrade samba on 18.04 to 4.16.0. Once I restarted both domain controllers
the Windows 11 with update 22H2 system was able to bind to the Domain.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go for Java Developers - Part 2</title>
      <link>/post/go-for-java-part2/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/go-for-java-part2/</guid>
      <description>&lt;p&gt;This is my second post on things I&amp;rsquo;m finding interesting about the Go
language.  For additional background on this series you might want to read
&lt;a href=&#34;../go-for-java-part1&#34;&gt;Part 1&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;dependency-management&#34;&gt;Dependency Management&lt;/h2&gt;
&lt;p&gt;This time I&amp;rsquo;m going to focus on dependency management and how
go approaches the &lt;a href=&#34;../sane-java-dependency-management&#34;&gt;diamond dependency issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First off, Go does not support pre-compiled libraries the way Java
does.  (Personally, I think compiled Jar files are from a by-gone time
and these days cause more harm than good, but that&amp;rsquo;s not why Go
doesn&amp;rsquo;t have them.)  Go doesn&amp;rsquo;t have them because Go code compiles
down into native assembly so it would be impossible to distribute
anything precompiled by Go and expect it to work on more than one
platform.&lt;/p&gt;
&lt;p&gt;So instead, Go publishes libraries as source code with Git tags and
avoids artifactory all together.  When you want to use a library you
create a dependency on a git repo with a specific tag version.&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t exactly remove the diamond dependency issue as it is
entirely possible to have a transitive dependency on two different
versions of a library. In this case, as with Java, you still have to
select the version you want to use. However, there are two substantial
changes.&lt;/p&gt;
&lt;h3 id=&#34;cant-ignore-the-problem&#34;&gt;Can&amp;rsquo;t ignore the problem&lt;/h3&gt;
&lt;p&gt;First, you don&amp;rsquo;t have the option of ignoring or miss the issue.  This
means that if your service builds in Go, you can be confident your
code does not contain any &amp;ldquo;hidden&amp;rdquo; mismatch errors.  This effectively
removes an entire class of errors that you have with Java.  (TBH,
these don&amp;rsquo;t pop up too often, but the more common a library is the
greater the chance for this to happen.  I&amp;rsquo;ve seen this error triggered
with the Guava libraries.) Being able to completely remove
them as a class of problems would be nice.&lt;/p&gt;
&lt;h3 id=&#34;conflicts-identified-at-the-source-code-level&#34;&gt;Conflicts identified at the source code level&lt;/h3&gt;
&lt;p&gt;Second, conflicts are identified at the source code level and not at
the version level. This means that PATCH version mismatches won&amp;rsquo;t
break your build so long as they don&amp;rsquo;t change function signature (and
PATCHES really shouldn&amp;rsquo;t).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not saying that the way Go deals with this is perfect but it does
move the problem into a first class issue and forces a
resolution. Java could take this same approach if you copied all of
your dependencies into your code base as source code. But I did find
it as an interesting consequence on how Go handles dependency
management.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go for Java Developers - Part 1</title>
      <link>/post/go-for-java-part1/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/go-for-java-part1/</guid>
      <description>&lt;p&gt;For the last 20+ years I&amp;rsquo;ve been mostly focused on Java development.
But recently I had an opportunity to join a team which was focused on
Go and having spent the early part of my career writing C++ I was
intrigued by some of the decisions Go made. So this is the first (of
possibly several) posts on things I found interesting about the
language and since my I have been doing mostly Java development I&amp;rsquo;m
going to be comparing and contrasting from that perspective.&lt;/p&gt;
&lt;h2 id=&#34;go-interfaces&#34;&gt;Go interfaces&lt;/h2&gt;
&lt;p&gt;For this first post I&amp;rsquo;m going to discuss one specific implication of
how Go handles interfaces.&lt;/p&gt;
&lt;p&gt;If you are unfamiliar with Go, it uses structural typing for
interfaces (which is more generally called &amp;ldquo;duck typing&amp;rdquo; meaning &amp;ldquo;if
it walks like a duck and talks like a duck … it&amp;rsquo;s a duck.&amp;rdquo;)  This
means that if a struct in Go has functions on it which match the
methods of an interface, instances of that struct are types of that
interface. This sounds more complicated than it actually is so lets
look at a quick example:&lt;/p&gt;
&lt;p&gt;Suppose you wanted to create a Person class and a Named interface in
Java, that might look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;interface Named {
	String getName();
}

class Person implements Named {
	String name;

	String getName() {
    	return name;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty straight forward.  Now, if we wanted to do a similar thing in
Go it would probably look something like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Named interface {
     getName() string
}

type Person struct {
     name string
}

func (p Person) getName() string {
     return p.name
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ignoring the syntax differences, what is interesting is that in Go we
don&amp;rsquo;t declare Person as implementing Named.  This is implied by the
function on Person matching the method in the Named interface. The
compiler figures this out for us and instances of a Person are
automatically of type Named.&lt;/p&gt;
&lt;p&gt;So while this isn&amp;rsquo;t necessarily a new thing (Python mostly lets you
do the same thing), this was something new for a statically typed
language.&lt;/p&gt;
&lt;p&gt;When I first saw this I thought &amp;ldquo;meh, so you can leave off the
&amp;lsquo;implements&amp;rsquo; keyword, whatever.&amp;rdquo;  But I think this feature has a really
interesting implication.&lt;/p&gt;
&lt;h3 id=&#34;the-setup&#34;&gt;The setup&lt;/h3&gt;
&lt;p&gt;Back in Java land, let&amp;rsquo;s suppose you have a function that takes an SQL
PreparedStatement as one of its arguments.  Something like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Db {
   void setValue(PreparedStatement stmt, String value) {
 	stmt.setString(1, value);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You might use this like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;PreparedStatement stmt = conn.prepareStatement(&amp;quot;SELECT …&amp;quot;);
Db db = new Db();
db.setValue(stmt, &amp;quot;someValue&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Writing a unit test for this would probably look something like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class DbTest {

	@Test
	public void setValueTest() {
    	Db db = new Db();
    	PreparedStatement stmt = ??
    	db.setValue(stmt, &amp;quot;dog&amp;quot;);

    	// todo - verify the statement received the value of &amp;quot;dog&amp;quot;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The challenge is creating the test &lt;code&gt;PreparedStatement&lt;/code&gt;.  You could use
one of the mocking frameworks in Java (Mockito, PowerMock, …) to mock
the PreparedStatement and test that setValue is called with the value
&amp;ldquo;dog&amp;rdquo;.  While this does work, most/all of the mocking frameworks are
basically a nice user interface over a rats nest of reflection
calls. (Used incorrectly reflection is a tool to move compile time
errors back to the runtime.)  However, it is also possible to test
this without using a mocking framework by building our own class which
implements PreparedStatement:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class TestPreparedStatement implements PreparedStatement {

	String value;

	void setString(int parameterIndex, String x) {
    	this.value = x;
	}

	...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An instance of our &lt;code&gt;TestPreparedStatement&lt;/code&gt; can now be passed into our
setValue method and we can later verify that the internal &amp;lsquo;value&amp;rsquo; is
set to &amp;ldquo;dog&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Ahhh … but there is a devil hidden in these details.
PreparedStatement is a massive interface with well over 50 methods.
In order to stub out the one method you want (setString) you are going
to need to also stub out all of the other ones as well.  We don&amp;rsquo;t ever
use them so they can all throw a RuntimeException (and thankfully most
modern IDEs can automatically generate this code for you) … but you
are still dealing with a lot of boilerplate code.&lt;/p&gt;
&lt;h3 id=&#34;the-switch&#34;&gt;The switch&lt;/h3&gt;
&lt;p&gt;Now let&amp;rsquo;s take a look at this same problem in Go land.  (For the sake
of argument let&amp;rsquo;s assume that PreparedStatement both exists in Go and
works much in the same way as its Java counterpart).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Db struct {
}

func (db Db) setValue(stmt PreparedStatement, value string) {
    stmt.setString(1, value)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And again it is used like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;stmt := conn.prepareStatement(&amp;quot;SELECT …&amp;quot;)
db := Db{}
db.setValue(stmt, &amp;quot;someValue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let&amp;rsquo;s write the unit test:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func SetValueTest(t* testing.T) {
    db := Db{}
    stmt := ??
    db.setValue(stmt, &amp;quot;dog&amp;quot;)

    // todo - verify the statement received the value of &#39;dog
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We&amp;rsquo;ve once again hit the same issue.  As with Java, we can use the
Go&amp;rsquo;s mock framework (which also uses reflection) or, as before, we can
try to roll our own.&lt;/p&gt;
&lt;p&gt;Approaching it directly we could build out a TestPreparedStatement as:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type TestPreparedStatement struct {
    value string
}

func (tps TestPreparedStatement) setString(parameterIndex int, x string) {
     tps.value = x
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But then we are going to have the same issue as we had with Java where
we also need to stub out all of the other 50+ methods in the
PreparedStatement interface which is just as wasteful as it was in
Java.  But we do have one other option.&lt;/p&gt;
&lt;h3 id=&#34;duck-typing&#34;&gt;Duck Typing&lt;/h3&gt;
&lt;p&gt;What if we didn&amp;rsquo;t stub out all of the other methods and instead
created a new interface which only contained the one method we are
using?  So something like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type StringSetter interface {
    setString(parameterIndex int, x string)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, since our &lt;code&gt;TestPreparedStatement&lt;/code&gt; implements this one method it
is automatically a type of StringSetter.  But guess what, the object
returned by conn.prepareStatement is also now a type of StringSetter
since it too implements setString (by virtue of it being a
PreparedStatement which also requires the same method.)&lt;/p&gt;
&lt;p&gt;Now, we only need to change the signature of our setValue method to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func (db Db) setValue(stmt StringSetter, value string) {
    stmt.setString(1, value)
} 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is where the power of the duck typing comes into play as doing
this in Java would require modifying the definition of
PreparedStatement so it explicitly extend StringSetter, which is
virtually impossible.  Yet in Go this is trivial as we can assign
interfaces to objects by simply copying over the methods we want into
the interface.&lt;/p&gt;
&lt;p&gt;I found this to be a surprising feature about Go and is not something
I had considered before.  It feels really powerful and, to be honest,
I&amp;rsquo;m not yet sure if this is a good feature about the language or not,
but it is an interesting one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Three Questions to Ask When Writing a New API</title>
      <link>/post/three-questions/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/post/three-questions/</guid>
      <description>&lt;p&gt;The following is &lt;a href=&#34;https://blog.newrelic.com/engineering/writing-api-three-questions/&#34;&gt;blog post&lt;/a&gt;
that was written from a speech I presented about questions to consider when writing an API.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Writing a functional API is relatively easy, but writing a good one
that’s functional and empowers your users takes planning and
patience. Designing a good API is about creating a sense of clarity
and simplicity—it’s the bridge between your intention and your users.&lt;/p&gt;
&lt;p&gt;Like most software development, building an API is a creative process;
it’s impossible to completely define a hard-and-fast set of rules that
will work in all cases. Nevertheless, three key questions—derived from
what I consider the key characteristics of a good API—can serve you
well as functional guideposts as you design and write your API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is your API’s usage discoverable?&lt;/li&gt;
&lt;li&gt;Is your API composable?&lt;/li&gt;
&lt;li&gt;Is your API safe to use?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s take a closer look at each question.&lt;/p&gt;
&lt;h2 id=&#34;is-your-apis-usage-discoverable&#34;&gt;Is your API’s usage discoverable?&lt;/h2&gt;
&lt;p&gt;In his famous book, &lt;a href=&#34;https://www.amazon.com/Design-Everyday-Things-Revised-Expanded-ebook/dp/B00E257T6C&#34;&gt;The Design of Everyday
Things&lt;/a&gt;,
Don Norman coined the term discoverability. &amp;ldquo;When we interact with a
product,&amp;rdquo; Norman wrote, &amp;ldquo;we need to figure out how to work it. This
means discovering what it does, how it works, and what operations are
possible.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Take doors, for example: We interact with these standard physical
objects every day. Often, based on the presence of affordances like
knobs, handles, and push bars, it’s pretty clear how to open or close
a door. But on occasion, a door’s design will suggest the opposite of
how it actually works, and, as a result, we require instructions
before we can properly use it. Just think of how many times you pulled
a handle that actually needed to be pushed.&lt;/p&gt;
&lt;p&gt;When we use a door the wrong way, we feel silly and stupid, but it’s
not our fault. Actually it’s the design that’s bad.&lt;/p&gt;
&lt;p&gt;Something similar can happen with a poorly designed API.&lt;/p&gt;
&lt;p&gt;Consider the last API you used. How did you learn to use it? Did you
read all the documentation first, or did you just jump right in? Maybe
you weren’t sure about all of the parameters, so you sent in null for
a few values and guessed at others. Did the API throw an error message
when you did something wrong, or did it fail silently without any
feedback?  Did the error message clearly define which parameters were
optional and which were not? Did you just keep plugging away until you
got it right?&lt;/p&gt;
&lt;p&gt;This is how most users will learn your API.&lt;/p&gt;
&lt;p&gt;Your users are going to learn just enough to bootstrap themselves, and
then they’ll figure the rest out as they go. With this fact in mind,
you can help them along the away by increasing your API’s
discoverability. You can do this through documentation; adhering to
conceptual models; and using concise, symmetrical language.&lt;/p&gt;
&lt;h3 id=&#34;assume-your-users-wont-read-the-documentationuntil-they-need-to&#34;&gt;Assume your users won’t read the documentation—until they need to&lt;/h3&gt;
&lt;p&gt;Just because your users won’t read your documentation doesn’t mean
that you don’t need to provide it. You definitely do. But don’t design
your API with the assumption that everyone will read the docs before
they use it.&lt;/p&gt;
&lt;p&gt;Some users would rather experiment than look up an answer in the
docs. Every time I use Java’s substring() method, for example, I can
never remember if the second value is an offset or a length, so I just
write a little program to try it out both ways. This is usually
quicker for me, and more fun, than looking up the answer.&lt;/p&gt;
&lt;p&gt;In many cases, users who’ve learned to distrust documentation won’t
read the docs anyway, at least not until they get
desperate. Documentation is notorious for being out of date or just
wrong. Now, this obviously isn’t true of all documentation, but think
of how many times you’ve consulted documentation—or a help system or
knowledge base—and found that either it provided answers that were
totally useless, or it didn’t provide any related answers at
all. Plenty of documentation does a poor job of anticipating the
questions users might ask or how they might ask them. Additionally,
even if users have a sense of what task they want to achieve, they may
lack the exact vocabulary or use different terms for that task than
the docs, which can make searching difficult.&lt;/p&gt;
&lt;p&gt;You should also provide plenty of examples in your
documentation—because users want them. Typically, examples are the
first things users look for when learning a new API. Only after they
gain a little context will they go look at the rest of the
documentation. Examples are how users come to understand your API as a
whole.&lt;/p&gt;
&lt;h3 id=&#34;create-a-conceptual-model-of-how-your-api-works&#34;&gt;Create a conceptual model of how your API works&lt;/h3&gt;
&lt;p&gt;Don Norman explains that a conceptual model is &amp;ldquo;an explanation,
usually highly simplified, of how something works.&amp;rdquo; Conceptual models
are not schematics, and they should relate to other known conceptual
models.&lt;/p&gt;
&lt;p&gt;A good example of a conceptual model is the file system structure used
on personal computers. File systems, like those on Mac and Windows
operating systems, were intentionally based on the concept of files
and folders that we were already familiar with in the physical
world. This made it easy for non-technical users to understand and
discover how to copy, store, and retrieve files on their PCs.&lt;/p&gt;
&lt;p&gt;Even today, Unix uses this conceptual model of files and folders
anytime a user attaches a device (e.g. a phone or external hard drive)
to an operating system, which has completely eliminated the need for
users to &amp;ldquo;discover&amp;rdquo; a new API every time they attach a device.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Objects&amp;rdquo; in object-oriented programming are another example of a
conceptual model. They’re specifically called objects so that we think
of them as self-defining entities. Just as a ball object on the
computer might support a bounce method, as well as other methods like
throw, a ball in real life, through its design, also supports bounce
and throw operations. In data-oriented programming, however, you don’t
get this conceptual model, so you’re more likely to have a bounce
function that will throw an error if you send it anything other than a
ball.&lt;/p&gt;
&lt;p&gt;Another example of working within conceptual models is the use of
&amp;ldquo;object&amp;rdquo; in object-oriented programming. In this programming model,
objects represent physical objects from the real world, such as
servers, databases, and load balancers, and developers create
relationships between those objects via APIs.&lt;/p&gt;
&lt;h3 id=&#34;use-clear-consistent-and-symmetrical-language&#34;&gt;Use clear, consistent, and symmetrical language&lt;/h3&gt;
&lt;p&gt;In addition to documenting your API, you should also develop and
publish a terminology dictionary for your API—and then use it
consistently. For example, I commonly see APIs use terms like host and
hostName, and account and accountId, almost interchangeably. Forcing
your users to guess what the right call might be, or constantly
changing the language, does not promote discoverability.&lt;/p&gt;
&lt;p&gt;Like conceptual models, symmetrical language helps users work with
your API with certain expectations in place. If your language is
symmetrical, an open operation will be balanced with a close, and an
add operation will be balanced with a delete.&lt;/p&gt;
&lt;p&gt;In Python, for example, you use pop to remove an element, so the
expectation would be that you’d use push to add an element, as that’s
how it works in most other languages. Instead, Python uses append… and
there’s plenty of Google search results from people confused by this
poor discoverability.&lt;/p&gt;
&lt;h2 id=&#34;is-your-api-composable&#34;&gt;Is your API composable?&lt;/h2&gt;
&lt;p&gt;When you build a composable API, you are letting your users select
components of the API and use them in whatever pattern they want.&lt;/p&gt;
&lt;p&gt;Small and composable methods are easier to describe and document than
larger methods that contain a long chain of steps and caveats. They’re
also easier to run regression and end-to-end tests against.&lt;/p&gt;
&lt;p&gt;Most importantly, though, employing composable components gives your
users the tools they need to build their own workflows with your
API. You can’t predict all your users’ needs, so don’t force them into
one execution pattern. Instead, create composable components and then
use your examples to show how to combine them into larger execution
patterns.&lt;/p&gt;
&lt;p&gt;For example, consider the following methods:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;setName(firstName, lastName)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vs.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;setFirstName(firstName)
setLastName(lastName)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The second option is more composable than the first, as the second
method allows you to easily update the value for lastName. With the
first method you would first have to fetch the value of firstName so
you could send it back in with the new value for lastName.&lt;/p&gt;
&lt;p&gt;The second option is also more extensible, as you can easily add a
method to set the middle name:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;setMiddleName(middleName)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the second option is also 100% backwards compatible with
existing code. If you were to update the first method to&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;setName(firstName, middleName, lastName)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you’d break the existing code.&lt;/p&gt;
&lt;p&gt;Both you and your users will undoubtedly enjoy the free backwards
compatibility, as building from smaller, composable components makes
it much easier to extend your API as it grows; and to continue
supporting support old operations alongside new ones.&lt;/p&gt;
&lt;h2 id=&#34;is-your-api-safe-to-use&#34;&gt;Is your API safe to use?&lt;/h2&gt;
&lt;p&gt;Ensuring that your API is safe to use—that it won’t behave differently
than users expect or break their workflows— is related to the
discoverability of an API. But safety is so important that I want to
call out the topic separately. When you publish your API, you create a
relationship with your users that should be based on trust and
transparency. Here’s how to make that happen:&lt;/p&gt;
&lt;h3 id=&#34;practice-the-principle-of-least-astonishment&#34;&gt;Practice the principle of least astonishment&lt;/h3&gt;
&lt;p&gt;The principle of least astonishment tells us that a component of a
system should behave in a way that most users will expect it to
behave. The behavior should not astonish or surprise users.&lt;/p&gt;
&lt;p&gt;The setDate method in GNU’s Coreutils, for example, surprises me every
time I use it because I expect a set method to set a value and not
alter it. If you set the year to any value less than 68, it
automatically adds 2000 to the value; and if you set any value between
68 and 100, it automatically adds 1900. Every time I use this method,
I’m astonished and have to re-read the documentation to make sure I’m
using it correctly.&lt;/p&gt;
&lt;h3 id=&#34;follow-the-contract&#34;&gt;Follow the contract&lt;/h3&gt;
&lt;p&gt;Don’t try to interpret what you think your user is trying to do. For
example, if your API expects a number, and the user provides a string,
don’t try to parse a number out of the string. You aren’t doing anyone
any favors: What happens when users enter an empty string: Is that 0
or null?&lt;/p&gt;
&lt;p&gt;Design your API so that it’s deterministic and strict.&lt;/p&gt;
&lt;h3 id=&#34;trust-nothing-and-fail-fast&#34;&gt;Trust nothing and fail fast&lt;/h3&gt;
&lt;p&gt;Similarly, your API should verify everything that users send, and
immediately fail on errors. More specifically, garbage-in should not
equal garbage-out. Garbage-in should fail. If your users are calling
your methods with incorrect values, they may be in discovery mode,
intentionally testing the boundaries and trying to figure out what is
possible.&lt;/p&gt;
&lt;p&gt;Help them understand what’s possible and what isn’t.&lt;/p&gt;
&lt;p&gt;Plan to version from the start and aggressively deprecate old versions
If you change the signature or external behavior of your API, version it.&lt;/p&gt;
&lt;p&gt;And when you do roll an API’s version forward, dedicate time and
resources to aggressively migrate users. If that’s not possible, try
to rewrite older versions so they proxy to the new
implementation. These steps will help avoid creating technical
debt—which, like financial debt, definitely accrues interest over
time. The longer an outdated version of your API sits around, the more
ingrained it becomes in your user base, and the harder it will be to
move users off of it. Set a migration date, and make it happen.&lt;/p&gt;
&lt;p&gt;If you release a version that is likely to change quickly, make that
fact explicit by tagging it as &amp;ldquo;incubating,&amp;rdquo; &amp;ldquo;unstable,&amp;rdquo; or &amp;ldquo;beta.&amp;rdquo;
This helps provide breathing room if you need to turn off old versions
of your API as you release new ones.&lt;/p&gt;
&lt;h3 id=&#34;separate-your-api-from-your-implementation&#34;&gt;Separate your API from your implementation&lt;/h3&gt;
&lt;p&gt;Finally, publish your API version separately from its
implementation. The implementation is likely to change faster than the
API, so don’t tie the two together.&lt;/p&gt;
&lt;p&gt;When versioning a library, for example, the API and its implementation
are in the same package, so you can’t help but release them at the
same time. But you can at least use semantic versioning to make it
clear which parts are backwards compatible.&lt;/p&gt;
&lt;p&gt;For a service, though, you can publish an API separately from its
implementation. In fact, there are plenty of tools, including Apache
Thrift, FlatBuffers, and Swagger, that allow you to write your API
separately. With these tools, you write your spec and then build your
implementation so that it implements the spec.&lt;/p&gt;
&lt;h3 id=&#34;nail-that-first-impression&#34;&gt;Nail that first impression&lt;/h3&gt;
&lt;p&gt;Your API is often a user’s first impression of your system. Spend time
on discoverability, composability, and safety to make sure that first
impression is a good one. Proper planning and design is critical to
the effectiveness and success of your API. Taking the time to think
things through will help to make your API a first-class feature—not a
mere afterthought or means to an end.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL is a terrible API</title>
      <link>/post/sql-terrible-api/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/post/sql-terrible-api/</guid>
      <description>&lt;h3 id=&#34;a-long-time-ago&#34;&gt;A long time ago&amp;hellip;&lt;/h3&gt;
&lt;p&gt;In 1974 the first relational database was created and along with it a
new user interface language was developed to make it easy to query the
data. This language (or rather sub-language) was called Structured
English Query Language or SEQUEL. SEQUEL would later evolved into SQL
and become the preeminent language for querying relational
databases. In the 45+ years since it&amp;rsquo;s introduction SQL has evolved
slightly but it is still largely similar to the version introduced in
the 70s. What has changed during that time is how we interact with the
database. Today, SQL is used significantly more by applications
querying the database than by end users. This usage pattern has
created its own ecosystem of utilities and libraries which help
applications build SQL queries.  One of the more popular libraries for
building SQL queries in Java is &lt;a href=&#34;https://docs.jboss.org/hibernate/entitymanager/3.5/reference/en/html/querycriteria.html&#34;&gt;Hibernate&amp;rsquo;s Criteria Builder&lt;/a&gt;
which uses an annotation pre-processor and a builder pattern to
facilitate building SQL queries.  (Java&amp;rsquo;s Persistence API was based
heavily on Hibernate&amp;rsquo;s Criteria Builder). But, at the end of the day
the builder still generates a basic SQL string which is sent to the
target database, parsed and then executed. Hibernate is just one
example, but there are hundreds of other libraries that exist across
various languages which all seek to provide the same basic
functionality. To provide an API which abstracts away the actual
building of an SQL query.&lt;/p&gt;
&lt;p&gt;So why do these all tools exist? Is an SQL query so complicated to
construct that we need libraries and utilities to help us? In general,
no, most SQL queries are relatively straightforward to construct. The
problem is that SQL was designed for humans and not computers. The
inclusion of the word &amp;lsquo;English&amp;rsquo; in the original name was not by
chance, SQL was intended to be similar enough to English that it would
be self descriptive and would only require minimal transformation from
the spoken question to the actual query. SQL was not written to make
querying easy from other applications. In order to query a database
from an application, the application needs to build the SQL query
programmatically at run time, which means that all errors in the SQL
query string are also going to be discovered at run time.&lt;/p&gt;
&lt;h3 id=&#34;an-impedance-mismatch&#34;&gt;An Impedance Mismatch&lt;/h3&gt;
&lt;p&gt;Compiled languages offer an enormous advantage over interpreted
languages in that you can be confident that, if the application
compiles, then it does not contain any syntax errors. This assurance
removes an entire class of errors that exist in pure scripting
languages. Yet, by having an application generate SQL you are
re-introducing the possibility of a run time syntax
error. Furthermore, the errors which do get introduced are almost
always related to the construction of the SQL query rather than actual
column names or keywords in the query. Meaning the column names and
keywords are not as likely to be the source of syntax errors as they
don&amp;rsquo;t normally change based on the user request. For example, an
application which allows the searching of available flights is less
likely to return different a type of data depending on the destination
city. You may get back more or less result, but it will usually be the
same basic set of information. Syntax errors around the column names
and keywords are often found through basic testing and fixed.&lt;/p&gt;
&lt;p&gt;The more common (and harder to find) syntax errors are introduced in
the construction of the query itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Did you remember a space after the &amp;lsquo;SELECT&amp;rsquo; and &amp;lsquo;FROM&amp;rsquo; keywords?&lt;/li&gt;
&lt;li&gt;Did you join your select fields with a comma, but remember to not
include a comma after the last one?&lt;/li&gt;
&lt;li&gt;If this is the first filter then we need to add the &amp;lsquo;WHERE&amp;rsquo; keyword,
but if this is the second one we need to add the &amp;lsquo;AND&amp;rsquo; keyword, and
don&amp;rsquo;t forget about the parentheses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These types of syntax errors are often introduced based on the users
search criteria and can be significantly more difficult to find with
basic testing due to the sheer number of permutations.  This is the
real advantage of using a helper library like Hibernate Criteria
Builder. They provide an assurance that if you use their libraries,
the generated SQL will be free of &lt;em&gt;construction syntax errors&lt;/em&gt;. This
assurance is most often achieved through massive test coverage and a
responsive development team which quickly patches any errors that are
found. It would be safe to say that in the 45+ years since the
introduction of SQL, millions of lines of code have been written in
various languages, all attempting to work around this same basic
problem. It&amp;rsquo;s a huge waste of intellectual effort for what is
essentially a self inflicted problem.&lt;/p&gt;
&lt;h3 id=&#34;where-to-go-from-here&#34;&gt;Where to go from here&lt;/h3&gt;
&lt;p&gt;SQL and similar English based DSLs (domain specific languages) are
immensely powerful for building complex queries quickly.  As an end
user, nothing is more frustrating than trying to build a complex
search criteria through a form based UI.  First enter the subject,
then select the predicate, then enter the object, then click the
plus sign to add another filter, rinse and repeat.  This becomes
incredibly tedious very quickly and makes building complex groupings
all but impossible.&lt;/p&gt;
&lt;p&gt;This is where an English based DSL really shines.  It allows a
seasoned user to rapidly create complex queries as they are doing it
interactively and have to do minimum mapping from what they are trying
to search for to the actual query they are running (just as SQL was
initially designed for).  But that is where the DSL should remain, as
a tool for the &lt;em&gt;end user&lt;/em&gt;. Do not just create an API which takes the
DSL directly as, at best, you will be recreating the same impedance
mismatch and likely forcing your users to create the same set of
&amp;ldquo;builder&amp;rdquo; libraries.&lt;/p&gt;
&lt;p&gt;Instead, define a flexible structure which can be used to describe a
query. JSON, XML or even one of the compressed protocols like Thrift
or Flatbuffers could work. Users can then create their query
programmatically and completely remove the risk of introducing a
construction based error because they forgot a space or included a
comma at the wrong location.  Your API can either accept this
structure directly for querying, or you can split it up and have
different endpoints accept different categories of queries based on
the structure of the return type.  Either way, creating a well defined
structure programmatically is straight forward and can easily be
supported from a multitude of languages.&lt;/p&gt;
&lt;p&gt;As for your UI, you are going to have to create a parser for your DSL
anyhow which is going to build an intermediary representation of your
query.  If you merge your intermediary representation with your defined
query structure it should be trivial to show the user what they would
need to send to the API in order to reproduce their query in the API.&lt;/p&gt;
&lt;p&gt;In this scenario your query language can continue to evolve separate
from your query structure.  You can even support other English based
DSLs as long as they can all generate the same query structure.  But
what ever you do, keep the two domains separate.  SQL is a terrible API.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating Simple and Effective Guidelines for Code Reviews</title>
      <link>/post/code-reviews/</link>
      <pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate>
      <guid>/post/code-reviews/</guid>
      <description>&lt;p&gt;The following is a &lt;a href=&#34;https://blog.newrelic.com/engineering/code-review-guidelines/&#34;&gt;blog post&lt;/a&gt;
that was written from a speech I gave about how to set the ground
rules for code reviews.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Following New Relic’s Project Upscale—an innovative reorganization
intended to make our development teams more autonomous—the engineering
organization formed several new teams, one of which was the New Relic
Database (NRDB) team. As the name implies, the NRDB team is
responsible for the development of our events database, which powers
the New Relic Insights tool as well as several other products.&lt;/p&gt;
&lt;p&gt;When we formed the NRDB team, it included several senior-level
software engineers. This was a highly skilled and very passionate
group of developers reviewing one another’s pull requests.&lt;/p&gt;
&lt;h2 id=&#34;when-passion-turns-toxic&#34;&gt;When passion turns toxic&lt;/h2&gt;
&lt;p&gt;Being passionate about your work is one of New Relic’s core values. In
this case, however, we may have experienced too much of a good thing:
our code reviews soon became collision points, and we increasingly
turned to passive-aggressive communications to settle our differences.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;code_review_comments.jpg&#34; alt=&#34;Comments made during a code review&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the example on the left, the reviewer left the PR in an in-between
state. They didn’t explicitly reject it, but they didn’t approve it
either. In the example on the right, the reviewer made a highly
subjective request, and the author just made the change, but from
their tone you can kind of guess that they didn’t appreciate the
feedback.&lt;/p&gt;
&lt;p&gt;As a result, the NRDB team’s developers grew increasingly frustrated,
team trust eroded, and several members (myself included) contemplated
switching to other teams. We were in trouble.&lt;/p&gt;
&lt;h2 id=&#34;refining-our-processand-saving-the-team&#34;&gt;Refining our process—and saving the team&lt;/h2&gt;
&lt;p&gt;We decided as a team to take a step back; we resolved to figure out
what was going on, why it was happening, and what we could do to fix
it. Since most of our frustration was tied to our code reviews, we
started by asking a simple question: how could we give one another
more effective and constructive feedback?&lt;/p&gt;
&lt;p&gt;We answered the question by developing four basic guidelines for code
reviews. We think you’ll find them useful, too, but before we spell
them out, we want to share the full story behind what happened to
divide our team and what was really as stake for us.&lt;/p&gt;
&lt;h2 id=&#34;a-flawed-approach-to-the-code-review-process&#34;&gt;A flawed approach to the code review process&lt;/h2&gt;
&lt;p&gt;Many of our challenges were related to the differences between
objective and subjective feedback in our code reviews. Being able to
differentiate clearly between these two types of feedback can be
critical to the success of a code review, and to the effectiveness of
a development team. In too many cases, we weren’t handling subjective
feedback in a constructive manner—in fact, just the opposite was true.&lt;/p&gt;
&lt;p&gt;We probably aren’t the only ones who struggle with this issue. Many
developers are trained from the start to downplay differences between
the two types of feedback. In fact, students in academic software
engineering programs rarely learn how to give or receive critical
feedback of any sort.&lt;/p&gt;
&lt;p&gt;When I went to school, this certainly was the case. The computer
science curriculum focused on algorithm analysis, data modeling, and
problem solving. Our instructors treated code review as a functional
quality-assurance task; they rarely presented it as a creative
process. Code review feedback tended to be straightforward: The code
either worked, or it didn’t. Because of this kind of training—or
rather, lack of training— many software engineers still treat all
aspects of code reviews as completely objective activities.&lt;/p&gt;
&lt;p&gt;It’s useful to contrast this approach with the one employed in an
academic creative writing program. There, instructors conduct
workshops that include training on how to give critical
feedback. Creative writing instructors understand that giving and
receiving critical feedback is an essential part of the creative
process. They also understand, however, that critical feedback can be
harmful and create resentment unless it is handled properly. The goal
is to provide feedback in a positive and constructive way that helps
to hone a writer’s ideas, enhance their creativity, and leave both
parties enriched by the process.&lt;/p&gt;
&lt;h2 id=&#34;the-struggle-over-subjectivity&#34;&gt;The struggle over subjectivity&lt;/h2&gt;
&lt;p&gt;Many facets of a code review, however, are not straightforward. In
particular, there are issues that demand subjective assessments for
which there are no “correct” answers. This is where the rigid emphasis
on code review as a totally objective activity, and the failure to
consider the creative nature of software development, can become a
problem.&lt;/p&gt;
&lt;p&gt;Many elements of a modern code review process are now fully
automated. Editors and IDEs will find syntax errors, evaluate Boolean
logic, and warn about infinite loops. As a result, the bugs that
survive are much harder to find, especially when you’re at the end of
the process and are just looking at a code snippet with limited
context.&lt;/p&gt;
&lt;p&gt;Editors and IDEs, however, can’t detect—or prevent developers from
focusing on—subjective issues such as confusing method names,
questionable style preferences, and bad variable formatting. And when
we dislike and disagree with what we find in such cases, we often
forget that these &amp;ldquo;flaws&amp;rdquo; are subjective matters of opinion—not
objective matters of fact.&lt;/p&gt;
&lt;p&gt;This approach also makes it easy to forget that a debate over
subjective issues during a code review can get emotional and heated
very quickly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;code_review_opinions.jpg&#34; alt=&#34;Opinions made during code reviews&#34;&gt;&lt;/p&gt;
&lt;p&gt;Some teams try to regulate this problem out of existence by creating
style guides that make objective rules out of subjective
preferences. This approach rarely succeeds: software development is
full of subjective choices, and there is no way to cover every
subjective choice that developers may face in the course of project.&lt;/p&gt;
&lt;p&gt;When a team lacks a clear communication channel for subjective
feedback, the problem gets even worse. Reviewers may mix their
subjective and objective comments without acknowledging the
differences; here too, the process can end in resentment, frustration,
and a breakdown in team communication.&lt;/p&gt;
&lt;h2 id=&#34;our-four-guidelines-for-code-reviews&#34;&gt;Our four guidelines for code reviews&lt;/h2&gt;
&lt;p&gt;This brings us back to the guidelines we developed to govern the
subjective elements of the NRDB team’s code review process.&lt;/p&gt;
&lt;p&gt;First, as a preliminary to our four guidelines, we agreed to define
&lt;em&gt;who is ultimately responsible for the correct execution of any code
changes.&lt;/em&gt; This was important to us because in a subjective debate, the
opinions of the person who has the ultimate responsibility—in other
words, verifying code execution— should carry the most weight. As a
result, we decided that &amp;ldquo;The author of the code change is responsible
for the correct execution of the change.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This may seem obvious, but not all teams work that way. Some teams,
for example, treat the review process as a QA process where the
reviewer is ultimately responsible for verifying correct execution.&lt;/p&gt;
&lt;p&gt;We found that subjective comments were most often presented as
objective feedback at the pull request stage of the process. As a
result, this is where we focused our code review guidelines.&lt;/p&gt;
&lt;p&gt;In creating these rules, we laid a foundation for team members to
clearly identify what a code reviewer should look for, and how to give
both subjective and objective feedback. Here are the guidelines:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The reviewer should identify errors that will cause an issue in production.&lt;/strong&gt;
It’s a code review, after all, so the reviewer should identify missing
semicolons, unending loops, or missing error handling. Reviewers
aren’t responsible for finding all such errors (that’s still the
responsibility of the author), but they should be on the lookout for
obvious issues that will break the system if they’re are deployed into
production. Such issues are a valid reason to block the pull request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The reviewer should verify that the stated goal of the code change aligns with the changes being made.&lt;/strong&gt;
If the author submits a pull request that says they’re making changes
to the networking code of a service, reviewers should expect that all
of the changes are in and around the service’s networking code. This
seems obvious, but it’s no secret that developers have a tendency to
try to pack in multiple changes in such cases. This isn’t even
necessarily a wrong practice, as long as the changes are mostly
co-located. When you align a code change to its stated goal, however,
you make it easier to determine if the pull request potentially
submits any new bugs. Here, too, we agreed that failing to align the
code change with its stated goal would justify blocking the pull
request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The reviewer should verify that any changes align with the team’s coding standards.&lt;/strong&gt;
I’ll cover this more in a bit, but as an example, if the team has
decided that all variables must use camel case, and the reviewer finds
a variable that does not use camel case, they should block the pull
request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The reviewer should look for anything they personally disagree with.&lt;/strong&gt;
This guideline addresses any comment which the first three rules do
not cover. We want reviewers to give feedback, even if it’s not
covered by the first three rules. We didn’t want our guidelines to
suppress feedback, which is essential for how we learn from one
another. Because these comments are clearly subjective, however, we
agreed that they do not justify blocking the pull request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To remove all confusion, we ask that reviewers specifically call out their comments as either blocking or non-blocking; and to add those comments as tags in their reviews. For example:&lt;/p&gt;
&lt;p&gt;Objective comments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Blocking: You are missing a semicolon.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Blocking: This loop never ends.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Blocking: You are missing some error handling here&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Subjective comments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Non-blocking: Your method name is not clear enough.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Non-blocking: You should put the open curly brace on the line above.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Non-blocking: You should use camel case for your variable here and not snake case.&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;working-within-our-code-review-guidelines&#34;&gt;Working within our code review guidelines&lt;/h2&gt;
&lt;p&gt;As we adopted these guidelines, the team had the most difficulty with
the fourth one. Adopting this meant we had to accept two conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The code our team produced did not need to be uniform.&lt;/strong&gt;
This meant overcoming a trend in our industry that says you should
strive to remove all fingerprints from your code that identifies who
wrote what part. We found the ROI on following this trend was pretty
low, and trying to do so just led us back into the same subjective
debate: If a developer writes code in a manner slightly different than
their peer would, does that mean the code is incorrect? Clearly, we
decided, that wasn’t the objective case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If a reviewer adds non-blocking feedback, the author should take the time to consider it.&lt;/strong&gt;
Early on, some team members were concerned that authors would simply
ignore all non-blocking comments, as their code was no longer blocked
by subjective feedback. Our solution, then, was to reiterate that &amp;ldquo;we
trust our teammates.&amp;rdquo; If, as reviewers, we took the time to enter a
comment, we trusted that the author would take the time to read and
consider it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These both were contentious points, and the team spent a long time
debating them. But ultimately, we found that the only way to work
through these issues successfully is to live with the guidelines and
give them a chance.&lt;/p&gt;
&lt;h2 id=&#34;sponsoring-a-coding-standard&#34;&gt;Sponsoring a coding standard&lt;/h2&gt;
&lt;p&gt;So, what are a reviewer’s options if they see something which they
passionately feel shouldn’t be in the code, especially if their
concern isn’t an &amp;ldquo;objective&amp;rdquo; rule violation they can block on? For
such concerns, we agreed that a reviewer could choose to sponsor an
addition to the team’s coding standards.&lt;/p&gt;
&lt;p&gt;Every two weeks, we hold a retrospective meeting where team members
are welcome to suggest changes or additions to our coding
standards. There are two restrictions to this activity:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We cannot describe coding standards in subjective language.&lt;/strong&gt;
For example, a sponsor can’t say, &amp;ldquo;variables must not be ambiguous,&amp;rdquo;
as ambiguity is subjective. But, the sponsor could add a standard that
states, &amp;ldquo;variables must use Hungarian notation,&amp;rdquo; as this is objective
and easily enforceable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If you sponsor a coding standard, you must support it.&lt;/strong&gt;
The sponsor must provide documentation and training as needed. If
there was a plugin or other tool the team needs to installed, the
sponsor is responsible for supporting it. This restriction ensures the
sponsor is passionate about anything they want to add to the team’s
coding standards.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;finding-respect-and-compromise-in-code-reviews&#34;&gt;Finding respect and compromise in code reviews&lt;/h2&gt;
&lt;p&gt;After agreeing to these guidelines, we cleared all our existing coding
standards and started over. For the first few weeks it was hard to
break old habits, and we had to remind several team members to add the
blocking and non-blocking tags during their pull request reviews. But
once we got rolling with the new guidelines, we saw a number of
successes.&lt;/p&gt;
&lt;p&gt;First, by forcing reviewers to clearly identify those comments that
were subjective, we noticed a change in how reviewers phrased their
comments.Reviewers can no longer demand changes that meet their
preferences; instead, they must request changes politely, and explain
why they’re requesting the change. When we provide more explanation
and context in this manner we create an environment that makes it
easier for teammates to learn from one another. Plus, asking for
changes, rather than demanding them, shows respect and acknowledges
that the code’s author has valid feelings about their work, as well.&lt;/p&gt;
&lt;p&gt;We also noticed that when a reviewer did write a non-blocking comment
asking for a change, the author typically made the requested change or
came up with a compromise—even though the author had the option of
ignoring the comment. This demonstrates why asking for changes, rather
than demanding them, builds stronger teams: the author feels less
resentful, and the reviewer feels that the author genuinely
appreciated their feedback.&lt;/p&gt;
&lt;p&gt;We’ve identified a few other terrific benefits from this process. By
limiting the scope of what qualifies as a blocking comment, for
example, we reduced the time it took us to approve and merge changes,
which resulted in greater overall project velocity. We have also
reduced the time required to onboard new new team members and to get
them up to speed with our code review process.&lt;/p&gt;
&lt;p&gt;We have also updated our training materials to reflect our new code
review process: We distribute one page that documents our guidelines,
and another page that documents our coding standards. New team members
now know exactly what they should be looking for and how best to
communicate their suggestions.&lt;/p&gt;
&lt;p&gt;We also expected the number of coding standards to increase greatly as
reviewers sponsored new standards for items they could no longer block
on. At the beginning, we did adopt several new coding standards, but
after an initial burst, the number of new agreements fell off
significantly. We concluded that since reviewers felt that authors
were taking into consideration their subjective feedback, they did not
feel as motivated to &amp;ldquo;convert&amp;rdquo; them to objective constraints based on
their point of view.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;code_review_proposals.jpg&#34; alt=&#34;The number of proposals made: expected vs. actual&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;these-guidelines-aid-in-team-autonomy&#34;&gt;These guidelines aid in team autonomy&lt;/h2&gt;
&lt;p&gt;The most important thing about these guidelines is that they support
team autonomy; in no way do these guidelines dictate which coding
standards teams should adopt. Teams are free to choose their own style
guides, and they decide how strict they want to to be. These
guidelines simply explain how to define coding standards and how
reviewers should look for and give feedback.&lt;/p&gt;
&lt;p&gt;We have come to appreciate the role that a strong and effective
feedback process can have on building team morale, increasing team
trust and communication, and improving development velocity. We
implemented guidelines to strengthen the feedback process and to
address issues that put the process at risk—and so far, I think we’re
getting exactly what we hoped to get from these improvements.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trying to solve Java&#39;s Gordian Knot</title>
      <link>/post/sane-java-dependency-management/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      <guid>/post/sane-java-dependency-management/</guid>
      <description>&lt;p&gt;Java&amp;rsquo;s dependency management suffers from the dreaded diamond
dependency issue. And while this issue is not unique to Java, it is,
perhaps, more acute due to the precompiled nature of Java&amp;rsquo;s Jar files.&lt;/p&gt;
&lt;h2 id=&#34;a-quick-refresher&#34;&gt;A Quick Refresher&lt;/h2&gt;
&lt;p&gt;If you are unfamiliar with this issue, here is a
quick refresher:&lt;/p&gt;
&lt;p&gt;Suppose there exists a library which contains a useful method that
takes a string as its parameter:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Common {
    void helpful(String a) {
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This library is published to an artifactory as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : common : 1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, suppose there exists two other libraries which both use this
helpful method&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Dog {
    void method1() {
        Common c = new Common();
        c.helpful(&amp;quot;dog&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Cat {
    void method2() {
        Common c = new Common();
        c.helpful(&amp;quot;cat&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each of these are also published to artifactory as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : dog : 1.0
    com.hrakaroo : cat : 1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And each of these have a transitive dependency on Common.  Okay, now
you decide to build your service which uses Dog and Cat so your
dependency tree looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : dog : 1.0
        com.hrakaroo : common : 1.0
    com.hrakaroo : cat : 1.0
        com.hrakaroo : common : 1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All is good.  But now the folks who created Common come out with a new
version which changes the signature of helpful and adds a boolean
flag.  So the new version looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Common {
    void helpful(String a, boolean flag) {
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And knowing they are going to break some things publish this under a new version in artifactory&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : common : 2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The folks who made the Cat library realize this new flag will fix a
bug they have had so they update to it as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Cat {
    void method2() {
        Common c = new Common();
        c.helpful(&amp;quot;cat&amp;quot;, true);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And publish it under&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : cat : 2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But the Dog library makers don&amp;rsquo;t need the new functionality so they
don&amp;rsquo;t bother to update.&lt;/p&gt;
&lt;p&gt;And finally, you decide to update your service to use the newest version
of Cat which has the bug fix you need.  This changes
your dependency tree to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    com.hrakaroo : dog : 1.0
        com.hrakaroo : common : 1.0
    com.hrakaroo : cat : 2.0
        com.hrakaroo : common : 2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Java 8 you can not bring in the same dependency more than once with
different versions. There are two common ways to deal with this, and they
are both wrong.&lt;/p&gt;
&lt;p&gt;First, you can not do anything. (This is probably the most popular
solution.) In this situation gradle will pick one (usually the latest
version) and use that as its version. In this case it will select
&lt;code&gt;com.hrakaroo : common : 2.0&lt;/code&gt; which means that when your service calls
Dog.method1 it will give you a &lt;em&gt;runtime exception&lt;/em&gt; as the JVM will be
unable to find the definition for &lt;code&gt;helpful(String)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Or, if you are using gradle, you can use it&amp;rsquo;s force tag and force the
version down to &lt;code&gt;com.hrakaroo : common : 2.0&lt;/code&gt; which means that when
your service calls Cat.method2 it will give you a &lt;em&gt;runtime exception&lt;/em&gt; as
the JVM will be unable to find the definition for
&lt;code&gt;helpful(String, boolean)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The only &amp;ldquo;correct&amp;rdquo; solution here is to use gradle&amp;rsquo;s
failOnVersionConfict() which will fail to compile your project unless
both your dog and cat dependencies use the same version. This means
you will be forced to fix the issue before your project can compile,
but this may not be practical as a large project has lots of moving
parts and compatible versions may not be available.
Additionally, &lt;code&gt;failOnVersionConflict()&lt;/code&gt; doesn&amp;rsquo;t understand semantic
versioning so it will fail on PATCH level differences which often
makes this a very painful and non-practical solution.&lt;/p&gt;
&lt;p&gt;Most people just choose to go with the plug-and-pray approach where
they just hope they never call a code path which encounters a
definition which doesn&amp;rsquo;t exist.&lt;/p&gt;
&lt;h2 id=&#34;cutting-the-knot&#34;&gt;Cutting the knot&lt;/h2&gt;
&lt;p&gt;As the two easy solutions are wrong and the one correct solution is
impratical, the only real answer here is to avoid the problem
altogether. When building a library, limit your dependencies.&lt;/p&gt;
&lt;p&gt;Building a service requires a different approach from building a
shared library. From the technologies you use to the way you version
and test it are substantially different. Services are often just thin
wiring together of different frameworks and libraries while libraries
are more single tasked. And yet, they too often I don&amp;rsquo;t see people
appreciate this difference. Instead they hack together libraries like
they do services.&lt;/p&gt;
&lt;h3 id=&#34;stick-to-vanilla-java&#34;&gt;Stick to vanilla Java&lt;/h3&gt;
&lt;p&gt;I really like the Kotlin language, but I don&amp;rsquo;t think it has a place
(yet) in shared libraries. Part of what makes Kotlin fun are all
of the extension and infix libraries which are all packaged in the
kotlin stdlib dependency.  Any time you have more than two kotlin
library dependencies you are just about assured to have a version
conflict on the kotlin stdlib.  Libraries should be written in Java
to remove as many dependencies as possible.&lt;/p&gt;
&lt;h3 id=&#34;avoid-huge-common-or-utility-libraries&#34;&gt;Avoid huge common or utility libraries&lt;/h3&gt;
&lt;p&gt;Apache&amp;rsquo;s commons-lang3 is a fantastic library, but too often I&amp;rsquo;ve seen
brought in so that the developer can use the &lt;code&gt;StringUtils.join()&lt;/code&gt;
method. Not only is this method &lt;em&gt;trivial&lt;/em&gt; to write, but with Java 8
this can be done directly off the stream using
&lt;code&gt;.collect(Collectors.joining(...))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The same can be said for Google&amp;rsquo;s Guava library, which is an enormous
library that often makes non-compatible changes. In one library I
reviewed the author had brought in a dependency on Guava so that they
could use the &lt;code&gt;Preconditions&lt;/code&gt; checks. While I think this type of
defensive programming is good, the precondition checks can easily be
re-created in your own library.&lt;/p&gt;
&lt;h3 id=&#34;copy-and-attribute&#34;&gt;Copy and attribute&lt;/h3&gt;
&lt;p&gt;Providing the license allows it, it is also okay to simply copy
sections of your dependent library directly into your own shared
library and remove the dependency. Be sure to attribute where you got
it from, but otherwise copying small to medium sized dependencies is
okay.&lt;/p&gt;
&lt;h3 id=&#34;relocate-and-attribute&#34;&gt;Relocate and attribute&lt;/h3&gt;
&lt;p&gt;Finally, if all of the above are failing for you and, again if the
licensing allows it, you can use a tool like shadow/shade to relocate
a dependent library directly into you own library. These tools can
will rebuild your resulting jar so that your dependencies are
no longer transitive and all references to their old location have been
changed to somewhere in your package.  So, for example, you could
relocate &lt;code&gt;com.apache.commons&lt;/code&gt; to &lt;code&gt;com.hrakaroo.apache.commons&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This will increase your jar size so it should really be used as the last
resort, but it will guarantee that no one can later change the depenency
version to something which is incompatable.&lt;/p&gt;
&lt;p&gt;Whatever your approach, you should take the time when creating a shared
library to minimize it&amp;rsquo;s transitive dependencies as much as possible.
By doing so you will help minimize the risk to developers which use your
library of creating their own diamon dependency nightmare.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Dance Recital</title>
      <link>/post/the-dance-recital/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      <guid>/post/the-dance-recital/</guid>
      <description>&lt;p&gt;The following is the speech I wrote for the Humorous Speaking Contest
for Toastmasters.  I placed first for the Division award but had to
back out of competing at the Area level due to a travel conflict.&lt;/p&gt;
&lt;p&gt;This speech is intended to be performed so it is not a formal writing.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My wife, who usually took our 10 year old daughter to her dance
recitals, had been asked to speak at a conference that coincided with
a recital, so I was tasked with taking our daughter instead.  While
this might stress out some fathers, it so happened that I was an
experience dancer dad.  My work schedule was very flexible so I had
become primarily responsible for taking our daughter to her dance
classes.  I had spent hours at the dance studio and I’d seen it all.
From temper tantrums, to crying and yelling and throwing things… and
that was just the moms.  I wasn’t worried in the least.&lt;/p&gt;
&lt;p&gt;My first task was to take her to get her makeup for the recital.
&amp;ldquo;Black eyeliner, red lipstick.&amp;rdquo;  That seemed straightforward, but when
we got to the makeup counter we found out there isn&amp;rsquo;t just one black
eyeliner.  There’s regular black, black out, onyx black, darkest
black, ferocious black and blackest black, just to name a few. I must
not be the most color aware person as all the different shades of
black looked pretty similar to me.  There were also water proof
versions of everything which I ruled out instantly as we were
certainly not going swimming.  So we eventually narrowed it down to
darkest black and blackest black, which seems like an absurd
differentiation.  I don’t know how you get to darkest without also
being the blackest but far be it from me to question a multi-billion
dollar industry.  After much back and forth we finally settled on
blackest black as we figured that way no one could complain it wasn’t
black enough.  The lipstick was a bit easier as the instructions had
included a specific shade number.&lt;/p&gt;
&lt;p&gt;However, it wasn’t until the day of the recital that I realized
neither my daughter nor I had ever actually applied either eyeliner or
lipstick.  These days you could probably find an instruction video
on-line, but this was pre-YouTube days.  We decided to tackle the
eyeliner first.  For those that don&amp;rsquo;t know, an eyeliner pencil is
essentially a sharpened stick which you need to get really close to
the eye.  The entire concept seems barbaric and on my first attempt I
couldn’t bring myself to actually get right up next to her eye.  This
left her with a ring around her eye.  Knowing this wasn’t quite
correct I tried to fix it by coloring from the edge of the ring closer
in towards her eye.  Although in theory this worked, the end result
was far more goth than I had intended.&lt;/p&gt;
&lt;p&gt;The lipstick proved to be almost as challenging as the eyeliner,
although less dangerous.  To me, lipstick seems like a sticky crayon
and your lips have a natural line on them that separates them from the
rest of your face, so I figured if I just colored in between the lines
I would be good to go.  What I didn’t account for was that there is no
natural stopping point inside your mouth and I spent a good while in
front of the mirror making various lip poses trying to get a sense of
how far in I should color.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Dad!&amp;rdquo;&lt;/p&gt;
&lt;p&gt;None of this was sitting well with my daughter who was becoming more
and more panicked with each facial gesture.  After deciding on a
general plan I proceeded to put on the lipstick much like you would
color in a coloring book, with rapid back-and-forth type motion.
Again, although in theory this worked it left her with a very thick
layer of lipstick on her lips.&lt;/p&gt;
&lt;p&gt;Still, with the makeup done we rushed off to the dance recital.  I got
her checked in and took my seat in the audience.&lt;/p&gt;
&lt;p&gt;The recital started normally but it didn’t take long before the hot
overhead lights, heavy costumes and general physical activity started
to take their toll.  Like most of the dancers, my daughter started to
sweat … heavily.  This is apparently what waterproof eyeliner is for.
Without it the sweat mixed with the thick ring I had applied and
proceeded to run down her cheeks, giving her an Alice Cooper look.
Meanwhile, the lipstick I had applied in her mouth had been rubbing
against her teeth turning them a frightening shade of red and causing
her smile to take on a menacing grimace.  This added new meaning to
the dance as it appeared my daughter was melting into a nightmarish
black swan, threatening to eat the other dancers.&lt;/p&gt;
&lt;p&gt;Stuck in the audience I could only watch with mounting horror as the
thick layer of lipstick started to work itself outside her lips and
smear around her face.  My first thought was &amp;ldquo;my wife is going to kill
me.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Thankfully some of the other moms took pity on her and tried to clean
her up between routines.  When my wife returned and saw the recital
photos she decided that she would never miss another dance recital
again.  My daughter recovered but has learned that dad is not who you
go to for makeup advice.  Still, whenever my kids ask me if they
should wear the blue outfit or the black one, I like to respond with
&amp;ldquo;now is that the darkest black one or the blackest black one?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Thank you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Walking the board</title>
      <link>/post/walking-the-board/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      <guid>/post/walking-the-board/</guid>
      <description>&lt;p&gt;In the traditional standup format everyone stands in a circle and each
person, in order, gives an update.  The updates follow the Agile
format:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What they did yesterday&lt;/li&gt;
&lt;li&gt;What their plans are for today&lt;/li&gt;
&lt;li&gt;Are there any blockers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have a number of problems with this format.&lt;/p&gt;
&lt;h3 id=&#34;context-switching&#34;&gt;Context Switching&lt;/h3&gt;
&lt;p&gt;People don’t usually stand in any particular order so the updates from
person to person often jump between the project(s) the team is working
on and hero tasks.  Additionally, if we’ve sized our tasks correctly
often what one person is working from day to day changes. This makes
sense to the person giving the update, but for everyone else, trying
to track actual progress becomes increasingly difficult.&lt;/p&gt;
&lt;h3 id=&#34;project-status&#34;&gt;Project Status&lt;/h3&gt;
&lt;p&gt;Related to context switching, it’s nearly impossible tell the overall
project status from this type of update.  Even if you could figure out
how many tickets were closed, without looking at the kanban board it’s
impossible to get even a sense of how far along the project is.  Plus,
this format does nothing to encourage people to actually update the
kanban board, compounding the issue.&lt;/p&gt;
&lt;h3 id=&#34;public-speaking&#34;&gt;Public Speaking&lt;/h3&gt;
&lt;p&gt;Public speaking does not come naturally to everyone, even when
presenting just to the team.  I’m much more relaxed with it now, but
there was a time when this type of setting would cause me enough
stress and I would ignore whatever was being said and just rehearse
what I was going to say.  Then, after I gave my update, I would spend
rest of the standup obsessing over the things I had messed up or
forgotten to say.&lt;/p&gt;
&lt;h3 id=&#34;competition-for-busiest&#34;&gt;Competition for Busiest&lt;/h3&gt;
&lt;p&gt;Without focus, the standup can become a passive competition for who is
the busiest person.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ve got a meeting with a customer today to talk over a feature they
want added.&lt;/li&gt;
&lt;li&gt;Well I&amp;rsquo;ve got &lt;em&gt;two&lt;/em&gt; meetings today to talk over features.&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;ve pretty much got meetings all day long so I&amp;rsquo;m not likely going
to get much else done.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It sounds silly, but it&amp;rsquo;s something I&amp;rsquo;ve seen happen a lot at multiple
companies, especially if people are feeling insecure (imposter
syndrome). It can take the form of lamenting (but really bragging)
about the number of meetings, or making the tasks you completed sound
like herculean efforts. It&amp;rsquo;s pointless and unhealthy for the team.&lt;/p&gt;
&lt;h3 id=&#34;forced-update&#34;&gt;Forced Update&lt;/h3&gt;
&lt;p&gt;Finally, it forces everyone to talk when they may not want to.  There
have been times in my career where my personal life has taken over and
I’ve needed to take some time off.  Be it medical or family
related. At the update I don’t want to go into details about what I’m
dealing with. In fact, I may be at work specifically to take a break
from the other stresses going on.  Perhaps I took off work yesterday
and I may have to leave early today to take care of a personal issue,
but now I&amp;rsquo;m in an unconformable position of either saying &amp;ldquo;I have no
update&amp;rdquo; or, worse, explain that &amp;ldquo;I&amp;rsquo;ve got some things going on which I
don&amp;rsquo;t want to talk about.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;As an individual contributor I find this standup format stressful and
as a project lead and manager I find it unhelpful.  Instead I prefer
using the standup time to walk the kanban board.&lt;/p&gt;
&lt;h2 id=&#34;walking-the-board&#34;&gt;Walking the board&lt;/h2&gt;
&lt;p&gt;With a Jira you can use swim planes to split up your kanban board into
project tasks and hero tasks.  Then starting at the &lt;strong&gt;Done&lt;/strong&gt; column, just
go down each column and each owner gives an update for their task.  In
this format there is no initial awkward moment trying to figure out
who should go first. The context switching is much less and the team
can focus on what is being said instead of trying to memorize what
they are going to say.&lt;/p&gt;
&lt;p&gt;Since &lt;strong&gt;Done&lt;/strong&gt; is often an end state and you don&amp;rsquo;t necessarily want to
re-walk this entire list every time you can either cut a Jira release
after each standup, or create a &lt;strong&gt;Closed&lt;/strong&gt; column and use the standup as
an opportunity to move tasks from &lt;strong&gt;Closed&lt;/strong&gt; to &lt;strong&gt;Done&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;closing-comments&#34;&gt;Closing comments&lt;/h3&gt;
&lt;p&gt;One critique of this format is that it is possible for a team member not
working on a task to feel left out. If they really are attending
meetings all day there is a chance to they haven&amp;rsquo;t picked up any tasks
and therefore won&amp;rsquo;t speak.  So, at the end of the standup ask a quick
question for any closing or final comments.  This is the opportunity
to team members to say &amp;ldquo;I need to leave early today,&amp;rdquo; but I would keep
the focus on today and away from team members trying to justify their
time from yesterday. If there really is a concern about yesterday that
should be brought up directly in their 1:1 with their manager and not
the team.&lt;/p&gt;
&lt;p&gt;As a project lead and manager I find walking the board to be
significantly more useful as I can tell exactly the progress of the
project (as I’m looking at the tickets) and I can also be sure that
Jira tickets for the project are up to date. As an individual
contributor I don&amp;rsquo;t feel like I have to prepare as much for this
standup and I can just attend and focus on what everyone else is
saying.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
